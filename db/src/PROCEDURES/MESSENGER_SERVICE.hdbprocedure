PROCEDURE "MESSENGER_SERVICE" (
    IN IN_REQUEST_NO BIGINT,
    IN IN_REGISTERED_ID NVARCHAR(100),
	IN IN_MAIL_TO NVARCHAR(100),
	IN IN_ACTION NVARCHAR(10),
    -- IN ST_EVENTS "ST_REGISTERATION_EVENT_COMMENTS",
	IN ST_REQUEST_EVENTS_LOG "ST_REQUEST_EVENTS_LOG",
	
	OUT OUT_SUCCESS NVARCHAR(100),
	OUT OUT_EMAIL_TO NVARCHAR(100)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:
	DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
   -- Event Values
	DECLARE LV_EVENT_COUNT INTEGER;
	DECLARE LV_MAX_EVENT_CODE INTEGER;
	DECLARE LV_EVENT_NO INTEGER;
	DECLARE LV_STATUS INTEGER;
	DECLARE LV_NEXT_APPROVER_ID NVARCHAR(100);
	DECLARE LV_CREATED_BY NVARCHAR(100);
	DECLARE LV_MAIL_TO NVARCHAR(100);
	
	-- Local Variable values assigning
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
    
   
   -- Get Count for new EVENT_NO
	SELECT COUNT(*) into LV_EVENT_COUNT FROM "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
	WHERE "REQUEST_NO" = :IN_REQUEST_NO;
	
	SELECT "STATUS" into LV_STATUS FROM "VENDOR_PORTAL_REQUEST_INFO" 
	WHERE "REQUEST_NO" = :IN_REQUEST_NO;
	
	
	LV_EVENT_NO := LV_EVENT_COUNT + 1;
	OUT_SUCCESS := null;
	LV_MAIL_TO := null;
	
	IF :IN_ACTION = 'VENDOR' THEN
	   IF :LV_STATUS = 4 OR :LV_STATUS = 10 or :LV_STATUS = 2 
		THEN
	        SELECT "REQUESTER_ID" into LV_CREATED_BY FROM "VENDOR_PORTAL_REQUEST_INFO" 
	        WHERE "REQUEST_NO" = :IN_REQUEST_NO;
	        
	        LV_MAIL_TO := :LV_CREATED_BY;
	        
	   ELSEIF :LV_STATUS = 5 or :LV_STATUS = 6 OR :LV_STATUS = 9 THEN
	        SELECT "NEXT_APPROVER" into LV_NEXT_APPROVER_ID FROM "VENDOR_PORTAL_REQUEST_INFO" 
	        WHERE "REQUEST_NO" = :IN_REQUEST_NO;
	   
	        LV_MAIL_TO := :LV_NEXT_APPROVER_ID;
	   END IF;
	    
	    -- SELECT MAX("EVENT_CODE") into LV_MAX_EVENT_CODE FROM "VENDOR_PORTAL_REGISTERATION_EVENT_COMMENTS"
	   -- WHERE "REQUEST_NO" = :IN_REQUEST_NO AND "EVENT_TYPE" = 'MSG';
	    
	   -- IF :LV_MAX_EVENT_CODE IS NOT NULL THEN
    --         SELECT "USER_ID" into IN_MAIL_TO FROM "VENDOR_PORTAL_REGISTERATION_EVENT_COMMENTS"
    --         WHERE "REQUEST_NO" = :IN_REQUEST_NO AND "EVENT_CODE" = :LV_MAX_EVENT_CODE;
    --     END IF;
    
    ELSEIF :IN_ACTION = 'APPROVER' OR  :IN_ACTION = 'BUYER' THEN
        LV_MAIL_TO := :IN_REGISTERED_ID; --Supplier id
    END IF;
    
	
	IF :IN_ACTION IS NOT NULL AND :IN_MAIL_TO IS NOT NULL 
	THEN
    	INSERT INTO "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
    	(
    		"REQUEST_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "EVENT_TYPE", "CREATED_ON"
    	)
    	SELECT :IN_REQUEST_NO, :LV_EVENT_NO, "EVENT_CODE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "EVENT_TYPE", :LV_CURR_TIMESTAMP
    	FROM :ST_REQUEST_EVENTS_LOG;
    	
        OUT_SUCCESS := 'Email sent to ' || :LV_MAIL_TO;
        OUT_EMAIL_TO := :LV_MAIL_TO;
    --   OUT_SUCCESS := 'Email sent to ' || :IN_MAIL_TO || ' - ' || :USER_ID; 

        COMMIT;
    
    END IF;
   
END