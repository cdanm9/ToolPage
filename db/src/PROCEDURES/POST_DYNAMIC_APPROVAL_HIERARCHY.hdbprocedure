PROCEDURE "POST_DYNAMIC_APPROVAL_HIERARCHY"(
    IN IN_ACTION NVARCHAR(20),
    -- IN IN_APP_TYPE NVARCHAR(30),
    IN ST_MASTER_APPROVAL_HIERARCHY "ST_MASTER_APPROVAL_HIERARCHY",
    -- IN IN_HIERARCHY_ID NVARCHAR(10),
    -- IN IN_USER_IDS NVARCHAR(1000),
    -- IN IN_TYPE NVARCHAR(10),
    -- IN IN_ROLE_CODE NVARCHAR(50),
    OUT OUT_SUCCESS NVARCHAR(300)
  ) 
  LANGUAGE SQLSCRIPT 
  SQL SECURITY INVOKER 
  AS 
BEGIN
  DECLARE LV_TYPE_MSG NVARCHAR(30);
  DECLARE LV_HIERARCHY_ID NVARCHAR(10);
  DECLARE LV_ROLE_CODE  NVARCHAR(10);
  DECLARE LV_TYPE NVARCHAR(10);
  DECLARE LV_ACCESS_EDIT    NVARCHAR(1);
  DECLARE LV_ACCESS_APPROVE NVARCHAR(1);
  DECLARE LV_ACCESS_SENDBACK NVARCHAR(1);
  DECLARE LV_ACCESS_REJECT  NVARCHAR(1);

  SELECT "HIERARCHY_ID","ROLE_CODE","TYPE","ACCESS_EDIT","ACCESS_APPROVE",
  "ACCESS_SENDBACK","ACCESS_REJECT"
  INTO LV_HIERARCHY_ID,LV_ROLE_CODE,LV_TYPE,LV_ACCESS_EDIT,LV_ACCESS_APPROVE,
LV_ACCESS_SENDBACK,LV_ACCESS_REJECT
  FROM :ST_MASTER_APPROVAL_HIERARCHY;

  -- IF :IN_APP_TYPE = 'REQ' THEN
  IF :IN_ACTION = 'CREATE' THEN
        
  INSERT INTO "VENDOR_PORTAL_MASTER_APPROVAL_HIERARCHY"  
  (
    "HIERARCHY_ID","ENTITY_CODE","LEVEL","ROLE_CODE","TYPE","ACCESS_EDIT","ACCESS_APPROVE",
    "ACCESS_SENDBACK","ACCESS_REJECT"
  
  )
  SELECT 	"HIERARCHY_ID","ENTITY_CODE","LEVEL","ROLE_CODE","TYPE","ACCESS_EDIT","ACCESS_APPROVE",
  "ACCESS_SENDBACK","ACCESS_REJECT"
  FROM :ST_MASTER_APPROVAL_HIERARCHY;

  -- INSERT INTO "VENDOR_PORTAL_MASTER_APPROVAL_MATRIX"
  -- (
  --   "HIERARCHY_ID","USER_IDS","TYPE"
  -- )
  -- SELECT :LV_HIERARCHY_ID,:IN_USER_IDS,:LV_TYPE FROM :ST_MASTER_APPROVAL_HIERARCHY;

--   IF :IN_TYPE = 'REQ'
--   THEN

-- END IF

--   COMMIT;
--     OUT_SUCCESS := 'User: ' ||  :IN_USER_IDS || ' added as ROLE' || ' in Request matrix';

  ELSEIF :IN_ACTION = 'UPDATE'
  THEN
        
  UPDATE "VENDOR_PORTAL_MASTER_APPROVAL_HIERARCHY"  
  SET "ROLE_CODE" = :LV_ROLE_CODE,
  "ACCESS_EDIT" = :LV_ACCESS_EDIT,"ACCESS_APPROVE" = :LV_ACCESS_APPROVE,
  "ACCESS_SENDBACK" = :LV_ACCESS_SENDBACK,"ACCESS_REJECT" = :LV_ACCESS_REJECT
  WHERE  "HIERARCHY_ID" = :LV_HIERARCHY_ID AND "TYPE" = :LV_TYPE;

  -- COMMIT;
  -- OUT_SUCCESS := 'ID: ' ||  :IN_HIERARCHY_ID || ' updated as ' || :IN_ROLE_CODE || ' in Hierarchy Approval Matrix';
  ELSEIF :IN_ACTION = 'DELETE'
  THEN
        
  DELETE FROM "VENDOR_PORTAL_MASTER_APPROVAL_HIERARCHY" WHERE "HIERARCHY_ID" = :LV_HIERARCHY_ID AND "TYPE" = :LV_TYPE;

  -- COMMIT;
  -- OUT_SUCCESS := 'ID: ' ||  :IN_HIERARCHY_ID || ' deleted ' || :IN_ROLE_CODE || ' in Hierarchy Approval Matrix';

   END IF;

    -- IF :LV_TYPE = 'REQ'
    --   THEN
    --     LV_TYPE_MSG := 'Request';
    -- ELSEIF :LV_TYPE = 'REG'
    --   THEN
    --   LV_TYPE_MSG := 'Registration';
    -- END IF;
    
      COMMIT;
      OUT_SUCCESS := 'Data ' || LOWER(:IN_ACTION) || 'd for Approval hierarchy'; 
        -- OUT_SUCCESS := 'User: ' ||  :IN_USER_IDS || ' ' || LOWER(:IN_ACTION) || 'ed in' || :LV_TYPE_MSG || 'matrix';
      --  IF  :IN_ACTION = 'CREATE' OR  :IN_ACTION = 'UPDATE'
      --   THEN
      --   OUT_SUCCESS := 'Data ' || LOWER(:IN_ACTION) || 'd for ' || :LV_TYPE_MSG || ' matrix'; 
      --   ELSE
      --   OUT_SUCCESS := 'Data ' || LOWER(:IN_ACTION) || 'ed for ' || :LV_TYPE_MSG || ' matrix';
      --   END IF;
  -- END IF;
END