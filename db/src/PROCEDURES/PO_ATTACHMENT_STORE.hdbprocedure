PROCEDURE "PO_ATTACHMENT_STORE" ( 
    IN  ST_DOC "ST_DOC_INFO_EXT",
    OUT SUCCESS NVARCHAR(100)     
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
--   READS SQL DATA 
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   DECLARE LV_UPLOADED_ON TIMESTAMP;
   DECLARE LV_PO_FILE_NO INTEGER;
   DECLARE LV_FILE_NAME NVARCHAR(500);

   SELECT CURRENT_TIMESTAMP,"PO_FILE_NO".NEXTVAL INTO LV_UPLOADED_ON,LV_PO_FILE_NO FROM DUMMY;
   
   SELECT "FILE_NAME" into LV_FILE_NAME FROM :ST_DOC;

   INSERT INTO "DOC_INFO_EXT_ATTACHMENT" (   
      "PO_FILE_NO","FILE_ID","FILE_CONTENT","FILE_MIME_TYPE","FILE_NAME","INVOICE_NO","INVOICE_DATE","INSTANCE_UID","STATUS","UPLOADED_ON","DOC_TYPE","AMOUNT","LOGIN_ID"  
   ) 
   SELECT :LV_PO_FILE_NO,"FILE_ID","FILE_CONTENT","FILE_MIME_TYPE","FILE_NAME","INVOICE_NO","INVOICE_DATE","INSTANCE_UID", "STATUS",:LV_UPLOADED_ON,"DOC_TYPE","AMOUNT","LOGIN_ID" FROM :ST_DOC; 
   COMMIT;       
      
   SUCCESS :='Attachment '||:LV_FILE_NAME||' Stored Sucessfully';     
END