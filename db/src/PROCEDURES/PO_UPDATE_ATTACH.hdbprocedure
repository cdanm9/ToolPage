PROCEDURE "PO_UPDATE_ATTACH" ( 
    IN STATUS NVARCHAR(100),
    IN INSTANCE_UID VARCHAR(40),
    IN FILE_ID VARCHAR(40),
    OUT SUCCESS NVARCHAR(100)
    )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
--   READS SQL DATA 
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
--   Status,FILE_ID,documentDate,purchaseOrderNumber,documentNumber,currencyCode,gross_value
    Declare lv_STATUS NVARCHAR(100);
    Declare lv_INSTANCE_UID  VARCHAR(40);
    Declare LV_FILE_CONTENT  blob;
    Declare lv_FILE_MIME_TYPE  NVARCHAR(2000);
    Declare lv_FILE_NAME  NVARCHAR(1000);
    -- Declare INSTANCE_UID  VARCHAR(40);
    Declare lv_FILE_ID  VARCHAR(40);
    
declare lv_header String;
declare lv_headerID integer;
    declare lv_headercount integer;

    lv_FILE_ID := FILE_ID;
    lv_STATUS := STATUS;
    lv_INSTANCE_UID := ' ';
    
        SELECT FILE_CONTENT,FILE_MIME_TYPE,FILE_NAME  into lv_FILE_CONTENT,lv_FILE_MIME_TYPE,lv_FILE_NAME FROM "DOC_INFO_EXT_ATTACHMENT" 
        where "FILE_ID" = lv_FILE_ID;
	
-- DELETE FROM "DOC_INFO_EXT_ATTACHMENT" where "FILE_ID" = lv_FILE_ID ;

-- COMMIT;
--         INSERT INTO "DOC_INFO_EXT_ATTACHMENT" VALUES
--             (
--                 :lv_FILE_ID,
--                 :lv_FILE_CONTENT,
--                 :lv_FILE_MIME_TYPE,
--                 :lv_FILE_NAME,
--                 :lv_INSTANCE_UID,
--                 :lv_STATUS
--             );
            
        UPDATE "DOC_INFO_EXT_ATTACHMENT"
        SET  FILE_CONTENT = lv_FILE_CONTENT , FILE_MIME_TYPE = lv_FILE_MIME_TYPE , FILE_NAME = lv_FILE_NAME , INSTANCE_UID = lv_INSTANCE_UID, STATUS = lv_STATUS 
        WHERE FILE_ID = lv_FILE_ID;
        COMMIT;
    
        SUCCESS := 'ATTACHMENT UPDATED'; 

END