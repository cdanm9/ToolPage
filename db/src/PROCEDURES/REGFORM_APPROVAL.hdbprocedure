PROCEDURE "REGFORM_APPROVAL" (
    IN REQUEST_NO BIGINT,
	IN ENTITY_CODE NVARCHAR(100),
	IN REQUEST_TYPE INTEGER,
	IN REGISTERED_ID NVARCHAR(100),
	IN REQUESTER_ID NVARCHAR(100),
	IN USER_ID NVARCHAR(100),
	IN APPROVER_LEVEL INTEGER,
       -- IN ST_EVENTS "ST_REGISTERATION_EVENT_COMMENTS",
	IN ST_REQUEST_EVENTS_LOG "ST_REQUEST_EVENTS_LOG",
    IN CHANGE_REQUEST_NO NVARCHAR(15),
    IN IVEN_VENDOR_NO BIGINT,
    IN SAP_VENDOR_CODE NVARCHAR(10),
    IN SUPPLIER_NAME NVARCHAR(100),
    IN COMPARE_TYPE NVARCHAR(1),
	
	OUT OUT_SUCCESS NVARCHAR(100),
	OUT OUT_EMAIL_TO NVARCHAR(100),
	OUT OUT_MAX_LEVEL INTEGER,
	OUT OUT_ERROR_CODE BIGINT,
	OUT OUT_ERROR_MESSAGE VARCHAR(1000) 
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:
	DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
	DECLARE LV_CURR_DATE TIMESTAMP;
	DECLARE LV_COUNT INTEGER;
	DECLARE LV_COUNT1 INTEGER;
	DECLARE LV_STATUS INTEGER;
   -- Event Values
	DECLARE LV_EVENT_COUNT INTEGER;
	DECLARE LV_EVENT_NO INTEGER;
	DECLARE LV_EVENT_CODE INTEGER;
	DECLARE LV_REMARK NVARCHAR(100); 
	--Matrix Values
	DECLARE LV_MAX_LEVEL INTEGER;
	-- Next Approver details
	DECLARE LV_NXT_APPROVER_ID NVARCHAR(100);
	DECLARE LV_NXT_APPROVER_ROLE NVARCHAR(50);
	DECLARE LV_APPR_TYPE NVARCHAR(10);
	DECLARE LV_NXT_APPROVER_LEVEL INTEGER;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
        RESIGNAL SET MESSAGE_TEXT = ::SQL_ERROR_MESSAGE;
	
	-- DECLARE EXIT HANDLER FOR SQLEXCEPTION
    -- SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE INTO OUT_ERROR_CODE,OUT_ERROR_MESSAGE FROM DUMMY;
    -- OUT_ERROR_CODE := null;
    -- OUT_ERROR_MESSAGE := null;

	-- Error
	-- SELECT * FROM "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
	-- WHERE "REQUEST_NO" = 'HELLO';             
	   

	
	
	-- Local Variable values assigning
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
    SELECT CURRENT_DATE INTO LV_CURR_DATE FROM DUMMY;

	--Generate SAP Vendor Code (BP No)
-- SELECT "SAP_VENDOR_CODE".NEXTVAL INTO SAP_VENDOR_CODE FROM DUMMY;
    
   
   -- Get Count for new EVENT_NO
	SELECT COUNT(*) into LV_EVENT_COUNT FROM "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
	WHERE "REQUEST_NO" = :REQUEST_NO;
	
	LV_EVENT_NO := LV_EVENT_COUNT + 1;
	
	
	-- Get Count of levels in Matrix for specific Entity
		LV_APPR_TYPE:='REG';
	SELECT MAX("APPROVER_LEVEL") into LV_MAX_LEVEL FROM "VENDOR_PORTAL_MASTER_APPROVAL_HIERARCHY_FE"
	WHERE "ENTITY_CODE" = :ENTITY_CODE AND "APPR_TYPE"=:LV_APPR_TYPE;
    
	-- SELECT MAX("APPROVER_LEVEL") into LV_MAX_LEVEL FROM "VENDOR_PORTAL_MATRIX_REGISTRATION_APPR"
	-- WHERE "ENTITY_CODE" = :ENTITY_CODE;
    
    OUT_SUCCESS := null;
    OUT_MAX_LEVEL := :LV_MAX_LEVEL;
    
    LV_NXT_APPROVER_LEVEL := :APPROVER_LEVEL + 1;
    
    -- Get Next Approver Role from Approver level
	IF :APPROVER_LEVEL BETWEEN 0 AND (:LV_MAX_LEVEL - 1)
	THEN
		-- SELECT "USER_ROLE", "USER_ID" 
		-- INTO LV_NXT_APPROVER_ROLE, LV_NXT_APPROVER_ID 
		-- FROM "VENDOR_PORTAL_MATRIX_REGISTRATION_APPR" 
		-- WHERE "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL AND "ENTITY_CODE" = :ENTITY_CODE;
		     
		SELECT "USER_ROLE", "USER_ID" 
		INTO LV_NXT_APPROVER_ROLE, LV_NXT_APPROVER_ID 
		FROM "VENDOR_PORTAL_MASTER_APPROVAL_HIERARCHY_FE" 
		WHERE "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL AND "ENTITY_CODE" = :ENTITY_CODE
		AND "APPR_TYPE"=:LV_APPR_TYPE;    
		
		SELECT COUNT(*)
        INTO LV_COUNT 
	    FROM "VENDOR_PORTAL_USER_DELEGATION" 
	    WHERE "STATUS" = 'A' AND "ASSIGN_FROM" = :LV_NXT_APPROVER_ID AND "DEL_TO_DATE" >= :LV_CURR_DATE AND "DEL_FROM_DATE" <= :LV_CURR_DATE;
	    
        IF :LV_COUNT != 0
    	    THEN
    	    LV_NXT_APPROVER_ROLE := null;
    	    
    	    SELECT "ASSIGN_TO" 
            INTO LV_NXT_APPROVER_ID 
    	    FROM "VENDOR_PORTAL_USER_DELEGATION" 
    	    WHERE "STATUS" = 'A' AND "ASSIGN_FROM" = :LV_NXT_APPROVER_ID AND "DEL_TO_DATE" >= :LV_CURR_DATE AND "DEL_FROM_DATE" <= :LV_CURR_DATE;
        END IF;
		
		
	ELSE
	    LV_NXT_APPROVER_ROLE := null;
	    LV_NXT_APPROVER_ID := null;
	END IF;
    
    
	
-- 	-- APPROVAL PROCESS--------------------------------------------------------------------
	IF :APPROVER_LEVEL < :LV_MAX_LEVEL
	THEN
	    LV_EVENT_CODE := 5;
	    LV_STATUS := 6;
	    LV_REMARK := 'Approved by - ' || :USER_ID;
	    
	 -- 1) Update Main Table
        UPDATE "VENDOR_PORTAL_REQUEST_INFO"
        SET "STATUS" = :LV_STATUS,
		 "NEXT_APPROVER" = :LV_NXT_APPROVER_ID,
        "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL,
        "APPROVER_ROLE" = :LV_NXT_APPROVER_ROLE,
        "LAST_UPDATED_ON" = :LV_CURR_TIMESTAMP
        WHERE "REQUEST_NO" = :REQUEST_NO;     
        
	-- 2) Insert into Address Table:
	    -- UPDATE "VENDOR_PORTAL_ONBOARDING_FORM"
        -- SET "STATUS" = :LV_STATUS,
        -- "NEXT_APPROVER" = :LV_NXT_APPROVER_ID,
        -- "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL,
        -- "APPROVER_ROLE" = :LV_NXT_APPROVER_ROLE,
        -- "LAST_UPDATED_ON" = :LV_CURR_TIMESTAMP
        -- WHERE "OBR_NO" = :REQUEST_NO;
        
	-- 3) Insert into Events Log:	
		INSERT INTO "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
    	(
    		"REQUEST_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "EVENT_TYPE", "CREATED_ON"
    	)
    	SELECT :REQUEST_NO, :LV_EVENT_NO, :LV_EVENT_CODE, "USER_ID", "USER_NAME", :LV_REMARK, "COMMENT", "EVENT_TYPE", :LV_CURR_TIMESTAMP
    	FROM :ST_REQUEST_EVENTS_LOG;

		
		OUT_SUCCESS := 'Request: ' || :REQUEST_NO || ' Approved by ' || :USER_ID || '.';
		OUT_EMAIL_TO := :LV_NXT_APPROVER_ID;    
		COMMIT;	
		
	ELSEIF :APPROVER_LEVEL = :LV_MAX_LEVEL
	THEN
	    LV_EVENT_CODE := 9;
	   -- LV_STATUS := 10; -- in Approval - MDG
	    LV_NXT_APPROVER_ID := null;
	    LV_NXT_APPROVER_LEVEL := null;
	    LV_NXT_APPROVER_ROLE := null;
	    LV_REMARK := 'Final Approval by - ' || :USER_ID;
	    
	    
	    IF :COMPARE_TYPE = 'A'
	    THEN
	        LV_STATUS := 11; -- Registered
		    -- OUT_SUCCESS := 'Supplier Registered as SAP Vendor No.: ' || :SAP_VENDOR_CODE;
		OUT_SUCCESS := 'Vendor ' || :SUPPLIER_NAME || ' registered successfully';
        ELSE
            LV_STATUS := 10; -- in Approval - MDG
		OUT_SUCCESS := 'Vendor registration completed for : ' || :SUPPLIER_NAME;
				-- OUT_SUCCESS := 'CR NO: ' || :CHANGE_REQUEST_NO || ' created for Supplier.: ' || :SUPPLIER_NAME;
		  --  OUT_SUCCESS := 'CR NO: ' || :CHANGE_REQUEST_NO || ' created for SAP Vendor No.: ' || :SAP_VENDOR_CODE;
		END IF;
	    
	    -- 1) Update Main Table
        UPDATE "VENDOR_PORTAL_REQUEST_INFO"
        SET "STATUS" = :LV_STATUS,
            "SAP_VENDOR_CODE" = :SAP_VENDOR_CODE,
            "VENDOR_NAME1"  = :SUPPLIER_NAME,
			"NEXT_APPROVER" = :LV_NXT_APPROVER_ID,
            "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL,
            "APPROVER_ROLE" = :LV_NXT_APPROVER_ROLE,
            "LAST_UPDATED_ON" = :LV_CURR_TIMESTAMP,
            "MDG_CR_NO" = :CHANGE_REQUEST_NO
        WHERE "REQUEST_NO" = :REQUEST_NO;
        
          -- 1) Update Log Table 
    --     IF :REQUEST_TYPE = 1 OR :REQUEST_TYPE = 2 OR :REQUEST_TYPE = 3 OR :REQUEST_TYPE = 6
    --     THEN
    --       SELECT COUNT(*)
    --       INTO LV_COUNT1 
	   --   FROM "VENDOR_PORTAL_SUPPLIER_PROFILE_LOG" 
	   --   WHERE "SAP_VENDOR_CODE" = :IVEN_VENDOR_NO;
	   -- IF :LV_COUNT1 != 0
    -- 	THEN
    --       UPDATE "VENDOR_PORTAL_SUPPLIER_PROFILE_LOG"
    --       SET "SAP_VENDOR_CODE" = :SAP_VENDOR_CODE
    --       WHERE "SAP_VENDOR_CODE" = :IVEN_VENDOR_NO;
    --     END IF;
    --     END IF;
        
	-- 2) Update into Address Table:
	    -- UPDATE "VENDOR_PORTAL_ONBOARDING_FORM"
        -- SET "STATUS" = :LV_STATUS,
        --     "NEXT_APPROVER" = :LV_NXT_APPROVER_ID,
        --     "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL,
        --     "APPROVER_ROLE" = :LV_NXT_APPROVER_ROLE,
        --     "LAST_UPDATED_ON" = :LV_CURR_TIMESTAMP,
        --     "MDG_CR_NO" = :CHANGE_REQUEST_NO,
        --     "SAP_VENDOR_CODE" = :SAP_VENDOR_CODE
        -- WHERE "OBR_NO" = :REQUEST_NO;
        
	-- 3) Insert into Events Log:	
		INSERT INTO "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
    	(
    		"REQUEST_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "EVENT_TYPE", "CREATED_ON"
    	)
    	SELECT :REQUEST_NO, :LV_EVENT_NO, :LV_EVENT_CODE, "USER_ID", "USER_NAME", :LV_REMARK, "COMMENT", "EVENT_TYPE", :LV_CURR_TIMESTAMP
    	FROM :ST_REQUEST_EVENTS_LOG;   
    	
    	--3) Update Active Status Table  
        -- Set all previous Actives of "IVEN_VENDOR_CODE" as null
        UPDATE "VENDOR_PORTAL_REQUEST_ACTIVE_STATUS"
        SET "ACTIVE" = null
        WHERE "IVEN_VENDOR_CODE" = :IVEN_VENDOR_NO;
        
        -- Set latest Request as Active
        UPDATE "VENDOR_PORTAL_REQUEST_ACTIVE_STATUS"
        SET "ACTIVE" = 'A',
            "UPDATED_ON" = :LV_CURR_TIMESTAMP
        WHERE "REQUEST_NO" = :REQUEST_NO;
        
        UPDATE "VENDOR_PORTAL_MASTER_IVEN_SAP_VENDOR_NO"
        SET "SAP_VENDOR_CODE" = :SAP_VENDOR_CODE
        WHERE "IVEN_VENDOR_CODE" = :IVEN_VENDOR_NO;

		-- IF :REQUEST_TYPE != 5
		-- THEN
		-- 	INSERT INTO "VENDOR_PORTAL_VENDOR_MASTER_S4_HANA" 
		-- 	(
		-- 		"BUKRS", "LIFNR", "NAME1"
		-- 	)
		-- 	VALUES( :ENTITY_CODE, :SAP_VENDOR_CODE,:SUPPLIER_NAME);
		-- COMMIT;
		-- END IF;
		
		
		OUT_EMAIL_TO := :LV_NXT_APPROVER_ID;
		COMMIT;	
		
-- 	ELSE
-- 	    OUT_SUCCESS := :LV_MAX_LEVEL;
	   -- OUT_SUCCESS := 'Approver Data not found'; 
			
	END IF;

	
END