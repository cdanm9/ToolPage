PROCEDURE "REGFORM_DRAFT_SUBMIT" (
    IN IN_REQUEST_NO BIGINT,
	IN IN_REQUEST_TYPE INTEGER,
	IN IN_STEP_NO INTEGER,
	IN IN_ENTITY_CODE NVARCHAR(10),
	IN IN_USER_ID NVARCHAR(100),
	IN IS_RESEND NVARCHAR(5),
	IN IN_STATUS INTEGER,
	IN VENDOR_CODE_FLAG NVARCHAR(10),

    IN ST_MAIN "ST_REQUEST_INFO",
	IN ST_ADDRESS "ST_REGFORM_ADDRESS",
	IN ST_CONTACTS "ST_REGFORM_CONTACTS",
	
	IN ST_BANKS "ST_REGFORM_BANKS",
	IN ST_FINANCE "ST_REGFORM_FINANCIAL",
	IN ST_OWNER "ST_REGFORM_OWNERS",
	
	IN ST_PROD_SERV "ST_REGFORM_PRODUCT_SERVICE",
	IN ST_CAPACITY "ST_REGFORM_CAPACITY",
	IN ST_CUSTOMER "ST_REGFORM_CUSTOMERS",
	IN ST_OEM "ST_REGFORM_OEM",
	
	IN ST_DISC_FIELDS "ST_REGFORM_DISCLOSURE_FIELDS",
	IN ST_DISC_RELATIVES "ST_REGFORM_DISCLOSURE_RELATIVES",
	IN ST_DISC_QACERT "ST_REGFORM_DISCLOSURE_QACERT",
	
	IN ST_ATTACH_FIELDS "ST_REGFORM_ATTACH_FIELDS",
    IN ST_ATTACH "ST_REGFORM_ATTACHMENTS",
	IN ST_UPDATED_FIELDS "VENDOR_PORTAL_MASTER_REGFORM_FIELDS_UPDATED",
	IN ST_EVENTS "ST_REQUEST_EVENTS_LOG",
	
	
	OUT OUT_SUCCESS NVARCHAR(150),
	OUT OUT_ERROR_CODE BIGINT,
	OUT OUT_ERROR_MESSAGE VARCHAR(1000),
	OUT OUT_EMAIL_TO NVARCHAR(100)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN

   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:
	DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
	DECLARE LV_OBR_COUNT INTEGER;
	DECLARE LV_CURR_DATE TIMESTAMP;
	DECLARE LV_COUNT INTEGER;
	DECLARE LV_APPROVER_COUNT INTEGER;
	DECLARE LV_SAVED_AS_DRAFT NVARCHAR(1);
	DECLARE LV_STATUS INTEGER;
	DECLARE LV_MESSAGE NVARCHAR(150);
	--Opentext Values
	DECLARE LV_IVEN_VENDOR_CODE INTEGER;
	DECLARE LV_OT_COUNT INTEGER;
	DECLARE LV_OT_PARENT_ID NVARCHAR(25);
	DECLARE LV_OT_FOLDER1_ID NVARCHAR(25);
	DECLARE LV_OT_FOLDER2_ID NVARCHAR(25);
	-- Event Values
	DECLARE LV_EVENT_COUNT INTEGER;
	DECLARE LV_EVENT_NO INTEGER;
	DECLARE LV_EVENT_CODE INTEGER;
	DECLARE LV_REMARK NVARCHAR(100);
	-- Next Approver details
	DECLARE LV_NXT_APPROVER_ID NVARCHAR(100);
	DECLARE LV_NXT_APPROVER_ROLE NVARCHAR(50);
	DECLARE LV_NXT_APPROVER_LEVEL INTEGER;
	
	-- DECLARE EXIT HANDLER FOR SQLEXCEPTION   
    -- SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE INTO OUT_ERROR_CODE,OUT_ERROR_MESSAGE FROM DUMMY;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
        RESIGNAL SET MESSAGE_TEXT = ::SQL_ERROR_MESSAGE;  

    OUT_ERROR_CODE := null;
    OUT_ERROR_MESSAGE := null;
    	
    
    OUT_SUCCESS := null;
    LV_OBR_COUNT := 0;       
    
    -- Local Variable values assigning
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;

	--capture updated fields
	DELETE FROM "VENDOR_PORTAL_MASTER_REGFORM_FIELDS_UPDATED" WHERE "REQ_NO" = :IN_REQUEST_NO;
	INSERT INTO "VENDOR_PORTAL_MASTER_REGFORM_FIELDS_UPDATED" 
	(
		"REQ_NO","S1G1T1F1","S1G1T1F2","S1G1T1F3","S1G1T1F4","S1G1T1F5","S1G1T1F6","S1G1T1F7","S1G1T1F8","S1G1T1F9","S1G1T1F10","S1G1T1F11","S1G2T2F1","S1G2T2F2","S1G2T2F3","S1G3T1F1","S1G4T1F1","S1G4T2F1","S1G4T3F1","S1G4T4F1","S1G4T5F1","S1G4T6F1","S1G4T7F1","S1G4T8F1","S1G4T9F1","S2G1T1F1","S2G1T1F2","S2G1T1F3","S2G1T1F4","S2G1T1F5","S2G1T1F6","S2G1T1F7","S2G1T1F8","S2G1T1F9","S2G1T2F10","S2G1T2F11","S2G1T2F12","S2G1T3F13","S2G1T3F14","S2G1T4F15","S2G2T1F1","S2G3T1F1","S2G3T1F2","S3G1T1F1","S3G1T1F2","S3G1T1F3","S3G1T1F4","S3G1T1F5","S3G2T1F1","S3G3T1F1","S3G3T1F2","S3G4T1F1","S3G5T1F1","S3G5T2F1","S4G1D1","S4G2D1","S4G3D1","S4G4D1","S4G5D1","S4G7D1","S4G8D1","S4G9D1","S4G9D2","S4G9D3","S4G9D4","S4G10D1","S4G10D2","S4G11D1","S4G12D1","S4G12D2","S4G12D3","S4G12D4","S4G12D5","S4G12D6","S4G12D7","S4G12D8","S4G12D9","S4G12D10","S4G13D1","S4G13D2","S4G13D3","S4G13D4","S4G13D5","S4G13D6","S4G14D1","S4G14D2","S4G14D3","S4G14D4","S4G14D5","S4G14D6","S4G14D7","S4G14D8","S4G14D9","S4G14D10","S4G14D11","S4G14D12","S4G14D13","S4G15D1","S4G15D2","S4G15D3","S4G15D4","S4G16D1","S4G17D1","S4G17D2","S4G18D1","S4G18D2","S4G18D3","S4G18D4","S4G19D1","S4G19D2","S5A1F1","S5A2F1","S5A3F1","S5A4F1","S5A5F1","S5A5F2","S5A6F1","S5A7F1","S5A7F2","S5A9F1","S5A10F1","S5A11F1","S5A12F1","S5A13F1","S5A14F1","S5A15F1","S5A16F1","S5A17F1","S5A18F1","S5A19F1","S5A20F1","S5A21F1","S3G2T2F6","S3G2T2F5","S3G2T2F4","S3G2T2F3","S3G2T2F2","S3G2T2F1","S2G3T1F6","S2G3T1F5","S2G3T1F4","S2G3T1F3","S2G2T4F1","S2G2T3F1","S2G2T2F1","S1G2T2F8","S1G2T2F7","S1G2T2F6","S1G2T2F5","S1G2T2F4","S1G2T1F5","S1G2T1F4","S1G2T1F3","S1G2T1F2","S1G2T1F1","S1G1T2F1","S1G1T2F2","S1G1T2F3","S1G1T2F4","S1G1T2F5","S1G1T2F6","S1G1T2F7","S1G1T2F8","S1G1T2F9","S1G1T2F10","S1G5T1F1","S1G5T2F1","S3G5T1F2","S3G5T1F3","S3G5T1F4","S3G5T2F2","S3G5T2F3","S3G5T2F4","S7G1D1","S7G1D2","S7G1D3","S7G1D4","S1G1T1F12","S1G1T2F11","S2G2T5F1","S5A5F3","S5A5F4","S2G1T1F10","S2G1T1F11","S2G1T5F1","S2G1T5F2","S2G1T5F3","S2G1T5F4","S2G1T5F5","S2G1T5F6","S2G1T5F7","S2G1T5F8","S2G1T5F9","S2G1T5F10","S2G1T5F11","S2G1T5F12","S2G1T5F13","S1G1T1F13","S1G1T1F14","S1G1T1F15","S1G1T2F12","S1G1T2F13","S1G1T2F14","S1G2T1F6","S1G2T1F7","S1G2T2F9"
	)
	SELECT 	:IN_REQUEST_NO,"S1G1T1F1","S1G1T1F2","S1G1T1F3","S1G1T1F4","S1G1T1F5","S1G1T1F6","S1G1T1F7","S1G1T1F8","S1G1T1F9","S1G1T1F10","S1G1T1F11","S1G2T2F1","S1G2T2F2","S1G2T2F3","S1G3T1F1","S1G4T1F1","S1G4T2F1","S1G4T3F1","S1G4T4F1","S1G4T5F1","S1G4T6F1","S1G4T7F1","S1G4T8F1","S1G4T9F1","S2G1T1F1","S2G1T1F2","S2G1T1F3","S2G1T1F4","S2G1T1F5","S2G1T1F6","S2G1T1F7","S2G1T1F8","S2G1T1F9","S2G1T2F10","S2G1T2F11","S2G1T2F12","S2G1T3F13","S2G1T3F14","S2G1T4F15","S2G2T1F1","S2G3T1F1","S2G3T1F2","S3G1T1F1","S3G1T1F2","S3G1T1F3","S3G1T1F4","S3G1T1F5","S3G2T1F1","S3G3T1F1","S3G3T1F2","S3G4T1F1","S3G5T1F1","S3G5T2F1","S4G1D1","S4G2D1","S4G3D1","S4G4D1","S4G5D1","S4G7D1","S4G8D1","S4G9D1","S4G9D2","S4G9D3","S4G9D4","S4G10D1","S4G10D2","S4G11D1","S4G12D1","S4G12D2","S4G12D3","S4G12D4","S4G12D5","S4G12D6","S4G12D7","S4G12D8","S4G12D9","S4G12D10","S4G13D1","S4G13D2","S4G13D3","S4G13D4","S4G13D5","S4G13D6","S4G14D1","S4G14D2","S4G14D3","S4G14D4","S4G14D5","S4G14D6","S4G14D7","S4G14D8","S4G14D9","S4G14D10","S4G14D11","S4G14D12","S4G14D13","S4G15D1","S4G15D2","S4G15D3","S4G15D4","S4G16D1","S4G17D1","S4G17D2","S4G18D1","S4G18D2","S4G18D3","S4G18D4","S4G19D1","S4G19D2","S5A1F1","S5A2F1","S5A3F1","S5A4F1","S5A5F1","S5A5F2","S5A6F1","S5A7F1","S5A7F2","S5A9F1","S5A10F1","S5A11F1","S5A12F1","S5A13F1","S5A14F1","S5A15F1","S5A16F1","S5A17F1","S5A18F1","S5A19F1","S5A20F1","S5A21F1","S3G2T2F6","S3G2T2F5","S3G2T2F4","S3G2T2F3","S3G2T2F2","S3G2T2F1","S2G3T1F6","S2G3T1F5","S2G3T1F4","S2G3T1F3","S2G2T4F1","S2G2T3F1","S2G2T2F1","S1G2T2F8","S1G2T2F7","S1G2T2F6","S1G2T2F5","S1G2T2F4","S1G2T1F5","S1G2T1F4","S1G2T1F3","S1G2T1F2","S1G2T1F1","S1G1T2F1","S1G1T2F2","S1G1T2F3","S1G1T2F4","S1G1T2F5","S1G1T2F6","S1G1T2F7","S1G1T2F8","S1G1T2F9","S1G1T2F10","S1G5T1F1","S1G5T2F1","S3G5T1F2","S3G5T1F3","S3G5T1F4","S3G5T2F2","S3G5T2F3","S3G5T2F4","S7G1D1","S7G1D2","S7G1D3","S7G1D4","S1G1T1F12","S1G1T2F11","S2G2T5F1","S5A5F3","S5A5F4","S2G1T1F10","S2G1T1F11","S2G1T5F1","S2G1T5F2","S2G1T5F3","S2G1T5F4","S2G1T5F5","S2G1T5F6","S2G1T5F7","S2G1T5F8","S2G1T5F9","S2G1T5F10","S2G1T5F11","S2G1T5F12","S2G1T5F13","S1G1T1F13","S1G1T1F14","S1G1T1F15","S1G1T2F12","S1G1T2F13","S1G1T2F14","S1G2T1F6","S1G2T1F7","S1G2T2F9"
	FROM :ST_UPDATED_FIELDS;
    
	-- Section General Info--------------------------------------------------------------------
	IF :IN_STEP_NO = 1 OR :IN_STEP_NO = 2 OR :IN_STEP_NO = 3 OR :IN_STEP_NO = 4 OR :IN_STEP_NO = 5 OR :IN_STEP_NO = 6
	THEN
	
	    -- Delete existing section one data
		DELETE FROM "VENDOR_PORTAL_REQUEST_INFO" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		DELETE FROM "VENDOR_PORTAL_REGFORM_ADDRESS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		DELETE FROM "VENDOR_PORTAL_REGFORM_CONTACTS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
	
	-- 1) Insert into Main Table:
		INSERT INTO "VENDOR_PORTAL_REQUEST_INFO"  
			(
			"REQUEST_NO","SAP_VENDOR_CODE","IVEN_VENDOR_CODE","STATUS" ,"REGISTERED_ID","ENTITY_CODE","REQUEST_TYPE" ,
			"CREATION_TYPE" ,"VENDOR_NAME1","VENDOR_NAME2","VENDOR_CODE","APPROVER_LEVEL" ,"APPROVER_ROLE","NEXT_APPROVER",
			"REQUESTER_ID","SUPPL_TYPE","SUPPL_TYPE_DESC","BP_TYPE_CODE","BP_TYPE_DESC","REQUEST_RESENT","MDG_CR_NO","LAST_ACTIVE_REQ_NO" ,
			"SECONDARY_EMAILS_ID","WEBSITE","LEGAL_STRUCTURE","LEGAL_STRUCTURE_OTHER","ESTAB_YEAR",
			"NO_OF_EMP","NO_OF_ENGG","NO_OF_QUALITY","NO_OF_PROD","NO_OF_ADMIN","NO_OF_OTHERS",
			"BUSINESS_TYPE","TRADE_LIC_NO","TRADE_LIC_NO_DATE","VAT_REG_NUMBER","VAT_REG_DATE",
			"SUPPL_CATEGORY","SUPPL_CATEGORY_DESC","ACTIVITY_TYPE","ORDER_SIZE_MIN","ORDER_SIZE_MAX","TOTAL_PROD_CAPACITY",
			"LAST_SAVED_STEP" ,"COMPLETED_BY","COMPLETED_BY_POSITION","ACK_VALIDATION",
			"SUBMISSION_DATE","LAST_UPDATED_ON","OT_PARENT_ID","OT_FOLDER1_ID","OT_FOLDER2_ID","OT_FOLDER3_ID","OT_FOLDER4_ID","VAT_CHECK",
			"ICV_SCORE","ICV_DATE","ICV_CHECK","NDA_TYPE","REMINDER_COUNT","BUYER_ASSIGN_CHECK","CREATED_ON","COMMENT","LEGACY_ID"
		)
		SELECT 
		:IN_REQUEST_NO,"SAP_VENDOR_CODE","IVEN_VENDOR_CODE",:IN_STATUS ,"REGISTERED_ID","ENTITY_CODE","REQUEST_TYPE" ,
		"CREATION_TYPE" ,"VENDOR_NAME1","VENDOR_NAME2","VENDOR_CODE","APPROVER_LEVEL" ,"APPROVER_ROLE","NEXT_APPROVER",
		"REQUESTER_ID","SUPPL_TYPE","SUPPL_TYPE_DESC","BP_TYPE_CODE","BP_TYPE_DESC",:IS_RESEND,"MDG_CR_NO","LAST_ACTIVE_REQ_NO" ,
		"SECONDARY_EMAILS_ID","WEBSITE","LEGAL_STRUCTURE","LEGAL_STRUCTURE_OTHER","ESTAB_YEAR",
		"NO_OF_EMP","NO_OF_ENGG","NO_OF_QUALITY","NO_OF_PROD","NO_OF_ADMIN","NO_OF_OTHERS",
		"BUSINESS_TYPE","TRADE_LIC_NO","TRADE_LIC_NO_DATE","VAT_REG_NUMBER","VAT_REG_DATE",
		"SUPPL_CATEGORY","SUPPL_CATEGORY_DESC","ACTIVITY_TYPE","ORDER_SIZE_MIN","ORDER_SIZE_MAX","TOTAL_PROD_CAPACITY",
		:IN_STEP_NO ,"COMPLETED_BY","COMPLETED_BY_POSITION","ACK_VALIDATION",
		"SUBMISSION_DATE",:LV_CURR_TIMESTAMP,"OT_PARENT_ID","OT_FOLDER1_ID","OT_FOLDER2_ID","OT_FOLDER3_ID","OT_FOLDER4_ID","VAT_CHECK",
		"ICV_SCORE","ICV_DATE","ICV_CHECK","NDA_TYPE","REMINDER_COUNT","BUYER_ASSIGN_CHECK",:LV_CURR_TIMESTAMP,"COMMENT","LEGACY_ID"

		FROM :ST_MAIN;
		
				-- Insert OpenText ids into VENDOR_PORTAL_REGFORM_FOLDER_IDS 
		SELECT "IVEN_VENDOR_CODE","OT_PARENT_ID","OT_FOLDER1_ID","OT_FOLDER2_ID" 
		INTO LV_IVEN_VENDOR_CODE,LV_OT_PARENT_ID,LV_OT_FOLDER1_ID, LV_OT_FOLDER2_ID  FROM :ST_MAIN;
        
        SELECT COUNT(*) INTO LV_OT_COUNT FROM "VENDOR_PORTAL_REGFORM_FOLDER_IDS" 
        WHERE "IVEN_VENDOR_CODE" = :LV_IVEN_VENDOR_CODE;
        
        IF :LV_OT_COUNT = 0 THEN
    	    INSERT INTO "VENDOR_PORTAL_REGFORM_FOLDER_IDS" VALUES(
            :LV_IVEN_VENDOR_CODE,:LV_OT_PARENT_ID,:LV_OT_FOLDER1_ID,:LV_OT_FOLDER2_ID,null,null,null);
        END IF;
	
	-- 2) Insert into Address Table: 
		INSERT INTO "VENDOR_PORTAL_REGFORM_ADDRESS" 
		(
			"REQUEST_NO", "SR_NO", "ADDRESS_TYPE", "ADDRESS_DESC", "HOUSE_NUM1", "STREET1", "STREET2", "STREET3", "STREET4","CITY", "STATE", "COUNTRY",  
			"POSTAL_CODE", "CONTACT_TELECODE", "CONTACT_NO", "FAX_NO", "EMAIL", "DISTRICT"
		)
		SELECT 	:IN_REQUEST_NO, "SR_NO", "ADDRESS_TYPE", "ADDRESS_DESC", "HOUSE_NUM1", "STREET1", "STREET2", "STREET3", "STREET4","CITY", "STATE", "COUNTRY",  
			"POSTAL_CODE", "CONTACT_TELECODE", "CONTACT_NO", "FAX_NO", "EMAIL", "DISTRICT"
		FROM :ST_ADDRESS;
		
	-- 3) Insert into Contacts 
		INSERT INTO "VENDOR_PORTAL_REGFORM_CONTACTS" 
		(
			"REQUEST_NO", "SR_NO","NAME1","NAME2","HOUSE_NUM1","STREET1","STREET2","DESIGNATION","EMAIL","CONTACT_NO","MOBILE_NO", "NATIONALITY","PASSPORT_NO","CONTACT_TYPE","CONTACT_TELECODE","MOBILE_TELECODE","CITY","BP_ID",
			"STATE", "POSTAL_CODE"
		)
		SELECT 	:IN_REQUEST_NO, "SR_NO","NAME1","NAME2","HOUSE_NUM1","STREET1","STREET2","DESIGNATION","EMAIL","CONTACT_NO","MOBILE_NO", "NATIONALITY","PASSPORT_NO","CONTACT_TYPE","CONTACT_TELECODE","MOBILE_TELECODE","CITY","BP_ID",
			"STATE", "POSTAL_CODE"
		FROM :ST_CONTACTS;
		
		-- Update Status 4 In Progress Invite Table
		-- UPDATE "VENDOR_INVITATION"
        -- SET "STATUS" = :IN_STATUS
        -- WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		
		COMMIT;
	
		
	OUT_SUCCESS := :IN_REQUEST_NO;
	END IF;
	
	-- Section 2 Financial Info--------------------------------------------------------------------
	IF :IN_STEP_NO = 2 OR :IN_STEP_NO = 3 OR :IN_STEP_NO = 4 OR :IN_STEP_NO = 5 OR :IN_STEP_NO = 6
	THEN

	-- Delete existing section one data
		DELETE FROM "VENDOR_PORTAL_REGFORM_BANKS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		DELETE FROM "VENDOR_PORTAL_REGFORM_FINANCIAL" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		DELETE FROM "VENDOR_PORTAL_REGFORM_OWNERS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		
	-- 4) Insert into Payment Table:	
		-- INSERT INTO "VENDOR_PORTAL_REGFORM_BANKS" 
		-- (
		-- 	"REQUEST_NO", "SR_NO", "NAME", "BENEFICIARY", "ACCOUNT_NO", "BRANCH_NAME", 
		-- 	"BANK_COUNTRY","ACCOUNT_NAME","ACCOUNT_HOLDER","BANK_ID", "BANK_KEY",
		-- 	"IBAN_NUMBER", "SWIFT_CODE", "BIC_CODE", "ROUTING_CODE", "OTHER_CODE",
		-- 	"OTHER_CODE_NAME", "OTHER_CODE_VAL",
		-- 	"PAYMENT_METHOD", "PAYMENT_TERMS", "INVOICE_CURRENCY", "PAYMENT_METHOD_DESC", "PAYMENT_TERMS_DESC", 
		-- 	"VAT_REG_NUMBER", "VAT_REG_DATE", "DUNS_NUMBER", "BANK_CURRENCY", "BANK_NO","PAYMENT_TYPE"
		-- )
		-- SELECT 	:IN_REQUEST_NO, "SR_NO", "NAME", "BENEFICIARY", "ACCOUNT_NO", "BRANCH_NAME",
		--     "BANK_COUNTRY","ACCOUNT_NAME","ACCOUNT_HOLDER","BANK_ID", "BANK_KEY",
		-- 	"IBAN_NUMBER", "SWIFT_CODE", "BIC_CODE", "ROUTING_CODE", "OTHER_CODE"
		-- 	"OTHER_CODE_NAME", "OTHER_CODE_VAL",
		-- 	"PAYMENT_METHOD", "PAYMENT_TERMS", "INVOICE_CURRENCY", "PAYMENT_METHOD_DESC", "PAYMENT_TERMS_DESC",
		-- 	"VAT_REG_NUMBER", "VAT_REG_DATE", "DUNS_NUMBER", "BANK_CURRENCY", "BANK_NO","PAYMENT_TYPE"
		-- FROM :ST_BANKS;
	INSERT INTO "VENDOR_PORTAL_REGFORM_BANKS" 
		(
			"REQUEST_NO", "SR_NO", "NAME", "BENEFICIARY", "ACCOUNT_NO","ACCOUNT_NAME" ,
			"ACCOUNT_HOLDER","BANK_ID","BANK_KEY",
			"BANK_COUNTRY", "BRANCH_NAME",
			"IBAN_NUMBER", "SWIFT_CODE", "BIC_CODE", "ROUTING_CODE","OTHER_CODE","OTHER_CODE_NAME",	"OTHER_CODE_VAL",
				"PAYMENT_METHOD","PAYMENT_METHOD_DESC",  "PAYMENT_TERMS", "PAYMENT_TERMS_DESC",
				"INVOICE_CURRENCY", "VAT_REG_NUMBER", "VAT_REG_DATE", "DUNS_NUMBER",  
				"BANK_CURRENCY","BANK_NO","PAYMENT_TYPE"
		)
		SELECT 	:IN_REQUEST_NO, "SR_NO", "NAME", "BENEFICIARY", "ACCOUNT_NO","ACCOUNT_NAME", "ACCOUNT_HOLDER",
		"BANK_ID","BANK_KEY",
		    "BANK_COUNTRY", "BRANCH_NAME",
			"IBAN_NUMBER", "SWIFT_CODE", "BIC_CODE", "ROUTING_CODE","OTHER_CODE","OTHER_CODE_NAME",	"OTHER_CODE_VAL",
				"PAYMENT_METHOD","PAYMENT_METHOD_DESC",  "PAYMENT_TERMS", "PAYMENT_TERMS_DESC",
				"INVOICE_CURRENCY", "VAT_REG_NUMBER", "VAT_REG_DATE", "DUNS_NUMBER",
				"BANK_CURRENCY","BANK_NO","PAYMENT_TYPE"
		FROM :ST_BANKS;
	-- 5) Insert into Owners Table	
		INSERT INTO "VENDOR_PORTAL_REGFORM_FINANCIAL" 
		(
			"REQUEST_NO", "SR_NO", "FIN_YEAR", "TOTAL_REVENUE", "NET_PROFIT_LOSS", "TOTAL_ASSETS", "TOTAL_EQUITY", "CURRENCY"
		)
		SELECT 	:IN_REQUEST_NO, "SR_NO",  "FIN_YEAR", "TOTAL_REVENUE", "NET_PROFIT_LOSS", "TOTAL_ASSETS", "TOTAL_EQUITY", "CURRENCY"
		FROM :ST_FINANCE;
		
	-- 6) Insert into Owners Table
		INSERT INTO "VENDOR_PORTAL_REGFORM_OWNERS" 
		(
			"REQUEST_NO", "SR_NO", "NAME", "NATIONALITY", "OWNERSHIP_PERCENT", "CONTACT_TELECODE", "CONTACT_NO", "PASSPORT_NO", "ACTIVITY_TYPE"
		)
		SELECT 	:IN_REQUEST_NO, "SR_NO", "NAME", "NATIONALITY", "OWNERSHIP_PERCENT", "CONTACT_TELECODE", "CONTACT_NO", "PASSPORT_NO", "ACTIVITY_TYPE"
		FROM :ST_OWNER;
		
		
		-- Update Status 4 In Progress Invite Table
		-- UPDATE "VENDOR_INVITATION"
        -- SET "STATUS" = :IN_STATUS
        -- WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		
		COMMIT;
			
	
	OUT_SUCCESS := :IN_REQUEST_NO;
	END IF;
	
	
	-- Section 3 Operation Info--------------------------------------------------------------------
	IF :IN_STEP_NO = 3 OR :IN_STEP_NO = 4 OR :IN_STEP_NO = 5 OR :IN_STEP_NO = 6
	THEN
	    
	    -- Delete existing section one data
			DELETE FROM "VENDOR_PORTAL_REGFORM_PRODUCT_SERVICE" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
			DELETE FROM "VENDOR_PORTAL_REGFORM_CAPACITY" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
			DELETE FROM "VENDOR_PORTAL_REGFORM_CUSTOMERS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
			DELETE FROM "VENDOR_PORTAL_REGFORM_OEM" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
	
	 
	 -- 1) Insert into Main Table: (Addition of 5 fields in section 3 - ORDER_SIZE_MIN * ORDER_SIZE_MAX)
		
	-- 7) Insert into Product & Services Table
		INSERT INTO "VENDOR_PORTAL_REGFORM_PRODUCT_SERVICE" 
		(
			"REQUEST_NO","TYPE", "SR_NO" , "PROD_NAME", "PROD_DESCRIPTION", "PROD_CATEGORY", "PROD_CATEGORY_DEC"
		)
		SELECT 	:IN_REQUEST_NO,  "TYPE", "SR_NO","PROD_NAME", "PROD_DESCRIPTION", "PROD_CATEGORY", "PROD_CATEGORY_DEC"
		FROM :ST_PROD_SERV;
	
	-- 8) Insert into Production Capacity Table
		INSERT INTO "VENDOR_PORTAL_REGFORM_CAPACITY" 
		(
			"REQUEST_NO", "SR_NO", "CITY", "COUNTRY", "PLANT_MANF_CAPABILITY", "PROD_CAPACITY", "TIME_TO_SERVICE"
		)
		SELECT 	:IN_REQUEST_NO, "SR_NO", "CITY", "COUNTRY", "PLANT_MANF_CAPABILITY", "PROD_CAPACITY", "TIME_TO_SERVICE"
		FROM :ST_CAPACITY;   
		
	-- 9) Insert into Customers Table
		INSERT INTO "VENDOR_PORTAL_REGFORM_CUSTOMERS" 
		(
			"REQUEST_NO", "SR_NO", "CUSTOMER_NAME", "CUSTOMER_SHARE"
 		)
		SELECT 	:IN_REQUEST_NO, "SR_NO", "CUSTOMER_NAME", "CUSTOMER_SHARE"
		FROM :ST_CUSTOMER;
		
	-- 10) Insert into OEM Table
		INSERT INTO "VENDOR_PORTAL_REGFORM_OEM" 
		(
			"REQUEST_NO", "SR_NO", "OEM_TYPE", "COMPANY_NAME", "COUNTRY", "OEM_CATEGORY"
 		)
		SELECT 	:IN_REQUEST_NO, "SR_NO", "OEM_TYPE", "COMPANY_NAME", "COUNTRY", "OEM_CATEGORY"
		FROM :ST_OEM;
		
		
		-- Update Status 4 In Progress Invite Table
		-- UPDATE "VENDOR_INVITATION"
        -- SET "STATUS" = :IN_STATUS
        -- WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		
		COMMIT;
		
	OUT_SUCCESS := :IN_REQUEST_NO;
	END IF;
	
		
	-- Section 4 Disclosure Info--------------------------------------------------------------------
	IF :IN_STEP_NO = 4 OR :IN_STEP_NO = 5 OR :IN_STEP_NO = 6 
	THEN
	    
	    -- Delete existing section one data
			DELETE FROM "VENDOR_PORTAL_REGFORM_DISCLOSURE_FIELDS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
			DELETE FROM "VENDOR_PORTAL_REGFORM_DISCLOSURE_RELATIVES" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
			DELETE FROM "VENDOR_PORTAL_REGFORM_DISCLOSURE_QACERT" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
			
	 -- 1) Insert into Main Table: (Addition of 1 field in section 4 - TOTAL_PROD_CAPACITY)
		
	-- 11) Insert into Disclousure Inputs Fields
		INSERT INTO "VENDOR_PORTAL_REGFORM_DISCLOSURE_FIELDS" 
		(
			"REQUEST_NO", "INTEREST_CONFLICT", "INTEREST_CONFLICT_TEXT", "ANY_LEGAL_CASES", "ANY_LEGAL_CASES_TEXT",
			"AKN_SIGNATURE", "AKN_NAME", "AKN_DESIGNATION", "AKN_DATE", "AKN_COMPANY_STAMP",
			"ACADEMIC_DISCOUNT", "RELATIVE_WORKING", "VALID_SIGNATORY_NAME", "VALID_DESIGNATION",
			"REACH_COMPLIANCE", "CLP_COMPLIANCE", "APPLY_ITAR_REG", "SUPPLY_ITAR_EAR", "APPLY_FCPA",
			"US_ORIGIN_SUPPL", "ERP_MGMT_SYSTEM", "ERP_MGMT_SYSTEM_NAME", "INDUSRIAL_DESIGN_SW", "INDUSRIAL_DESIGN_SW_NAME",
			"COUNTERFIET_PARTS_PCD", "QUALITY_AGREEMENT", "MANUFACTURING_PCD", "TECH_SPEC_MFG_SRV", "PLAN_COLLECTION",
			"ANALYSIS_RISKMGMT_PROC", "CONFIG_CTRL_SYSTEM", "CTRL_PLANNING_PROC", "CONT_IMPROVEMENT_PROG", "EPI_QUALITY_SUPPL_REQ",
			"SUPPL_EVAL_PROC", "NON_CONF_ANALYSIS", "TECH_SPEC_MATERIAL", "MATERIAL_INSPECTION_TESTS", "CTRL_ORDERS_DOC_PROC", "TECHNICAL_DOC_PROC",
        	"QUALIFIED_STAFF", "QUALIFICATION_ARRAY", "PROC_FOR_INCOMING", "MFG_INSPECTION_TESTS", "INTERAL_QUAL_AUDITS",
        	"MEASURING_EQUIP_CALIB", "NON_CONF_TREATMENT_PROC", "REPTITIVE_CAUSES_PROC", "IDENTIFICATION_METHOD", "MAINTENANCE_SCHEDULES",
        	"WORK_INSTRUCTION_METHODS", "DOCUMENTED_PROC", "PLANNING_CONTROL_SYSTEM",
        	"CRITERIA_COLLECT_PROC", "COMP_BASED_WMS", "ESTAB_CRITERIA", "DEFINED_POLICIES",
        	"CUSTOMER_SERVICE", "MASS_SERIES_PROD", "TECH_SUPPORT",
        	"SFTY_ENVI_POLICY", "ENVI_FRIENDLY_PROD", "SUSTAINABILITY_PROG", "COMPLY_LABOR_REG", "REQUIRE_EUC", "EXPORT_CNTRL"
 		)
		SELECT 	:IN_REQUEST_NO, "INTEREST_CONFLICT", "INTEREST_CONFLICT_TEXT", "ANY_LEGAL_CASES", "ANY_LEGAL_CASES_TEXT",
			"AKN_SIGNATURE", "AKN_NAME", "AKN_DESIGNATION", "AKN_DATE", "AKN_COMPANY_STAMP",
			"ACADEMIC_DISCOUNT", "RELATIVE_WORKING", "VALID_SIGNATORY_NAME", "VALID_DESIGNATION",
			"REACH_COMPLIANCE", "CLP_COMPLIANCE", "APPLY_ITAR_REG", "SUPPLY_ITAR_EAR", "APPLY_FCPA",
			"US_ORIGIN_SUPPL", "ERP_MGMT_SYSTEM", "ERP_MGMT_SYSTEM_NAME", "INDUSRIAL_DESIGN_SW", "INDUSRIAL_DESIGN_SW_NAME",
			"COUNTERFIET_PARTS_PCD", "QUALITY_AGREEMENT", "MANUFACTURING_PCD", "TECH_SPEC_MFG_SRV", "PLAN_COLLECTION",
			"ANALYSIS_RISKMGMT_PROC", "CONFIG_CTRL_SYSTEM", "CTRL_PLANNING_PROC", "CONT_IMPROVEMENT_PROG", "EPI_QUALITY_SUPPL_REQ",
			"SUPPL_EVAL_PROC", "NON_CONF_ANALYSIS", "TECH_SPEC_MATERIAL", "MATERIAL_INSPECTION_TESTS", "CTRL_ORDERS_DOC_PROC", "TECHNICAL_DOC_PROC",
        	"QUALIFIED_STAFF", "QUALIFICATION_ARRAY", "PROC_FOR_INCOMING", "MFG_INSPECTION_TESTS", "INTERAL_QUAL_AUDITS",
        	"MEASURING_EQUIP_CALIB", "NON_CONF_TREATMENT_PROC", "REPTITIVE_CAUSES_PROC", "IDENTIFICATION_METHOD", "MAINTENANCE_SCHEDULES",
        	"WORK_INSTRUCTION_METHODS", "DOCUMENTED_PROC", "PLANNING_CONTROL_SYSTEM",
        	"CRITERIA_COLLECT_PROC", "COMP_BASED_WMS", "ESTAB_CRITERIA", "DEFINED_POLICIES",
        	"CUSTOMER_SERVICE", "MASS_SERIES_PROD", "TECH_SUPPORT",
        	"SFTY_ENVI_POLICY", "ENVI_FRIENDLY_PROD", "SUSTAINABILITY_PROG", "COMPLY_LABOR_REG", "REQUIRE_EUC", "EXPORT_CNTRL"
		FROM :ST_DISC_FIELDS;
	
	-- 12) Insert into Disclousure Relatives
		INSERT INTO "VENDOR_PORTAL_REGFORM_DISCLOSURE_RELATIVES" 
		(
			"REQUEST_NO", "SR_NO", "NAME", "RELATIONSHIP"
 		)
		SELECT 	:IN_REQUEST_NO, "SR_NO", "NAME", "RELATIONSHIP"
		FROM :ST_DISC_RELATIVES;	
	
	-- 13) Insert into Disclousure Quality Certificates	
		INSERT INTO "VENDOR_PORTAL_REGFORM_DISCLOSURE_QACERT" 
		(
			"REQUEST_NO", "SR_NO", "CERTI_NAME", "CERTI_TYPE", "AVAILABLE", "DONE_BY"
 		)
		SELECT 	:IN_REQUEST_NO, "SR_NO", "CERTI_NAME", "CERTI_TYPE", "AVAILABLE", "DONE_BY"
		FROM :ST_DISC_QACERT;	
		
		-- Update Status 4 In Progress Invite Table
		-- UPDATE "VENDOR_INVITATION"
        -- SET "STATUS" = :IN_STATUS
        -- WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		
		COMMIT;	
		
		OUT_SUCCESS := :IN_REQUEST_NO;
	END IF;
		
	-- Section 5 Attachments--------------------------------------------------------------------
	IF :IN_STEP_NO = 5 OR :IN_STEP_NO = 6
	THEN
	    
	    -- Delete existing section one data			
			DELETE FROM "VENDOR_PORTAL_REGFORM_ATTACH_FIELDS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
			DELETE FROM "VENDOR_PORTAL_REGFORM_ATTACHMENTS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
			
	 -- 1) Insert into Main Table: (Addition of 1 field in section 4 - TOTAL_PROD_CAPACITY)
				
	-- 14)Insert into Attachments fields	
	    INSERT INTO "VENDOR_PORTAL_REGFORM_ATTACH_FIELDS" 
        	(
        		"REQUEST_NO", "IS_UAE_COMPANY", "ISSUE_ELEC_TAX_INV", "SOLE_DIST_MFG_SER", "PASSPORT_OF_AUTH_SIGNATORY", "PASSPORT_REPR_AUTH_PERSON"
        	)
        SELECT 	:IN_REQUEST_NO, "IS_UAE_COMPANY", "ISSUE_ELEC_TAX_INV", "SOLE_DIST_MFG_SER", "PASSPORT_OF_AUTH_SIGNATORY", "PASSPORT_REPR_AUTH_PERSON"
        FROM :ST_ATTACH_FIELDS;
        
    -- 15) Insert into Attachments fields	
        
        INSERT INTO "VENDOR_PORTAL_REGFORM_ATTACHMENTS" 
        	(
        		"REQUEST_NO", "SR_NO", "ATTACH_CODE", "ATTACH_DESC", "EXPIRY_DATE", "ATTACH_VALUE", "ATTACH_GROUP",
        		"FILE_NAME", "FILE_TYPE", "FILE_MIMETYPE", "FILE_CONTENT", "UPLOADED_ON", "OT_DOC_ID",
        		"OT_LAST_DOC_ID","UPDATE_FLAG","DELETE_FLAG","ATTACH_SHORT_DEC","ATTACH_FOR"
        	)
        SELECT 	:IN_REQUEST_NO, "SR_NO", "ATTACH_CODE", "ATTACH_DESC", "EXPIRY_DATE", "ATTACH_VALUE", "ATTACH_GROUP",
        		"FILE_NAME", "FILE_TYPE", "FILE_MIMETYPE", "FILE_CONTENT", :LV_CURR_TIMESTAMP, "OT_DOC_ID",
        		"OT_LAST_DOC_ID","UPDATE_FLAG","DELETE_FLAG","ATTACH_SHORT_DEC","ATTACH_FOR"
        FROM :ST_ATTACH;
        
		
		-- Update Status 4 In Progress Invite Table
		-- UPDATE "VENDOR_INVITATION"
        -- SET "STATUS" = :IN_STATUS
        -- WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		
		COMMIT;	
		
		OUT_SUCCESS := :IN_REQUEST_NO;
			
	END IF;

	-- Section 6 - Submission Page--------------------------------------------------------------------
	IF :IN_STEP_NO = 6 AND (:IN_STATUS = 4 OR :IN_STATUS = 7) OR :VENDOR_CODE_FLAG = 'IR'
		THEN
		
		-- Generate status, event code & remarks based on status
		IF :IN_STATUS = 4 AND :IS_RESEND IS NULL --In Progress
		THEN
			LV_STATUS := 6; -- Status - In Approval - SMDM
			LV_EVENT_CODE := 4; -- Event- OB Form Submitted
			LV_REMARK := 'Form submitted by - ' || :IN_USER_ID;
			
			LV_MESSAGE := 'Registration Form Submitted for Request: '  || :IN_REQUEST_NO || '. Your form will be forwarded to Procurement Team for verification.';
			
		ELSEIF :IN_STATUS = 4 AND :IS_RESEND = 'X' --Sent Back
		THEN
			LV_STATUS := 9; -- -- Status - Form Resent
			LV_EVENT_CODE := 8; -- Event - OB Request Resent
			LV_REMARK := 'Form resent by - ' || :IN_USER_ID;
			
			LV_MESSAGE := 'Registration Form Resubmitted for Request: '  || :IN_REQUEST_NO || '. Your form will be forwarded to Procurement Team for verification.';
			
		END IF;
		
		
		LV_NXT_APPROVER_LEVEL := 2; -- PM
		IS_RESEND := null;
		
		LV_NXT_APPROVER_ROLE := null;
	-- 	LV_NXT_APPROVER_ID := :IN_BUYER_ID
		
		SELECT COUNT(*)
		INTO LV_APPROVER_COUNT
		FROM "VENDOR_PORTAL_MATRIX_REGISTRATION_APPR" 
		WHERE "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL AND "ENTITY_CODE" = :IN_ENTITY_CODE;

		IF LV_APPROVER_COUNT != 0
		THEN
		-- Get PM/SMDM from Registration Matrix---------------------
			SELECT "USER_ROLE", "USER_ID" 
			INTO LV_NXT_APPROVER_ROLE, LV_NXT_APPROVER_ID 
			FROM "VENDOR_PORTAL_MATRIX_REGISTRATION_APPR" 
			WHERE "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL AND "ENTITY_CODE" = :IN_ENTITY_CODE;


			SELECT COUNT(*)
			INTO LV_COUNT 
			FROM "VENDOR_PORTAL_USER_DELEGATION"
			WHERE "STATUS" = 'A' AND "ASSIGN_FROM" = :LV_NXT_APPROVER_ID AND "DEL_TO_DATE" >= :LV_CURR_DATE AND "DEL_FROM_DATE" <= :LV_CURR_DATE;

			IF :LV_COUNT != 0
			THEN
			-- LV_NXT_APPROVER_ROLE := null;

			SELECT "ASSIGN_TO" 
			INTO LV_NXT_APPROVER_ID 
			FROM "VENDOR_PORTAL_USER_DELEGATION"
			WHERE "STATUS" = 'A' AND "ASSIGN_FROM" = :LV_NXT_APPROVER_ID AND "DEL_TO_DATE" >= :LV_CURR_DATE AND "DEL_FROM_DATE" <= :LV_CURR_DATE;
			END IF;
			------------------------------------------------------------

			-- 15) Update Main Table
			UPDATE "VENDOR_PORTAL_REQUEST_INFO"
			SET 
			"STATUS" = :LV_STATUS,
			"APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL,
			"APPROVER_ROLE" = :LV_NXT_APPROVER_ROLE,
			"NEXT_APPROVER" = :LV_NXT_APPROVER_ID
			WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		ELSE 
			UPDATE "VENDOR_PORTAL_REQUEST_INFO"
			SET 
			"STATUS" = :LV_STATUS,
			"APPROVER_LEVEL" = NULL,
			"APPROVER_ROLE" =NULL,
			"NEXT_APPROVER" = NULL
			WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		
		END IF;
			

		-- 16) Insert into Events Log:	

		-- Get Count for new EVENT_NO
		SELECT COUNT(*) into LV_EVENT_COUNT FROM "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
		WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		
		LV_EVENT_NO := LV_EVENT_COUNT + 1;
		
		INSERT INTO "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
		(
			"REQUEST_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "EVENT_TYPE", "CREATED_ON"
		)
		SELECT :IN_REQUEST_NO, :LV_EVENT_NO, :LV_EVENT_CODE, "USER_ID", "USER_NAME", :LV_REMARK, "COMMENT", "EVENT_TYPE", :LV_CURR_TIMESTAMP
		FROM :ST_EVENTS;
		
		OUT_SUCCESS := :LV_MESSAGE;
	OUT_EMAIL_TO := LV_NXT_APPROVER_ID;  -- PM/SMDM as next approver
		
		COMMIT;	
				
		END IF;

	
	
END