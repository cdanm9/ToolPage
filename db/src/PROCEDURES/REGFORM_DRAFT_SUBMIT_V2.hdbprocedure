PROCEDURE "REGFORM_DRAFT_SUBMIT_V2" (
    IN IN_REQUEST_NO BIGINT,
	IN IN_REQUEST_TYPE INTEGER,
	IN IN_STEP_NO INTEGER,
	IN IN_ENTITY_CODE NVARCHAR(10),
	IN IN_USER_ID NVARCHAR(100),
	IN IS_RESEND NVARCHAR(5),
	IN IN_STATUS INTEGER,

    IN ST_MAIN "ST_REQUEST_INFO",
	IN ST_ADDRESS "ST_REGFORM_ADDRESS",
	IN ST_CONTACTS "ST_REGFORM_CONTACTS",
	
	IN ST_BANKS "ST_REGFORM_BANKS",
	IN ST_FINANCE "ST_REGFORM_FINANCIAL",
	IN ST_OWNER "ST_REGFORM_OWNERS",
	
	IN ST_PROD_SERV "ST_REGFORM_PRODUCT_SERVICE",
	IN ST_CAPACITY "ST_REGFORM_CAPACITY",
	IN ST_CUSTOMER "ST_REGFORM_CUSTOMERS",
	IN ST_OEM "ST_REGFORM_OEM",
	
	IN ST_DISC_FIELDS "ST_REGFORM_DISCLOSURE_FIELDS",
	IN ST_DISC_RELATIVES "ST_REGFORM_DISCLOSURE_RELATIVES",
	IN ST_DISC_QACERT "ST_REGFORM_DISCLOSURE_QACERT",
	
	IN ST_ATTACH_FIELDS "ST_REGFORM_ATTACH_FIELDS",
    IN ST_ATTACH "ST_REGFORM_ATTACHMENTS",
	
	IN ST_EVENTS "ST_REQUEST_EVENTS_LOG",
	
	OUT OUT_SUCCESS NVARCHAR(100),
	OUT OUT_ERROR_CODE BIGINT,
	OUT OUT_ERROR_MESSAGE VARCHAR(1000),
	OUT OUT_EMAIL_TO NVARCHAR(100)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN

   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:
	DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
	DECLARE LV_SAVED_AS_DRAFT NVARCHAR(1);
	DECLARE LV_OBR_COUNT INTEGER;
-- 	DECLARE LV_STATUS INTEGER := 4; -- Draft status - In Progress
	DECLARE LV_OUT_SUCCESS VARCHAR(100);
	--Opentext Values
	DECLARE LV_IVEN_VENDOR_CODE INTEGER;
	DECLARE LV_OT_COUNT INTEGER;
	DECLARE LV_OT_PARENT_ID NVARCHAR(25);
	DECLARE LV_OT_FOLDER1_ID NVARCHAR(25);
	DECLARE LV_OT_FOLDER2_ID NVARCHAR(25);
	-- Event Values
	DECLARE LV_EVENT_COUNT INTEGER;
	DECLARE LV_EVENT_NO INTEGER;
	DECLARE LV_EVENT_CODE INTEGER;
	DECLARE LV_REMARK NVARCHAR(100);
	-- Next Approver details
	DECLARE LV_NXT_APPROVER_ID NVARCHAR(100);
	DECLARE LV_NXT_APPROVER_ROLE NVARCHAR(50);
	DECLARE LV_NXT_APPROVER_LEVEL INTEGER;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
    SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE INTO OUT_ERROR_CODE,OUT_ERROR_MESSAGE FROM DUMMY;
    OUT_ERROR_CODE := null;
    OUT_ERROR_MESSAGE := null;
    	
    
    OUT_SUCCESS := null;
    LV_OBR_COUNT := 0;
    
    -- Local Variable values assigning
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
    
    
	-- Section General Info--------------------------------------------------------------------
	IF :IN_STEP_NO = 1 OR :IN_STEP_NO = 2 OR :IN_STEP_NO = 3 OR :IN_STEP_NO = 4 OR :IN_STEP_NO = 5 
	THEN
	
		CALL "REGFORM_SECTION_1" 
		(:IN_REQUEST_NO, :IN_STEP_NO, :IN_ENTITY_CODE, :IN_USER_ID, :IS_RESEND, :IN_STATUS, 
		:ST_MAIN, :ST_ADDRESS, :ST_CONTACTS, 
		:LV_OUT_SUCCESS, :OUT_ERROR_CODE, :OUT_ERROR_MESSAGE);
		
		COMMIT;
	
		
	OUT_SUCCESS := :LV_OUT_SUCCESS;
	END IF;
	
	-- Section 2 Financial Info--------------------------------------------------------------------
	IF :IN_STEP_NO = 2 OR :IN_STEP_NO = 3 OR :IN_STEP_NO = 4 OR :IN_STEP_NO = 5 
	THEN
		
		CALL "REGFORM_SECTION_2" 
		(:IN_REQUEST_NO, :IN_STEP_NO, :IN_ENTITY_CODE, :IN_USER_ID, :IS_RESEND, :IN_STATUS, 
		:ST_BANKS, :ST_FINANCE, :ST_OWNER, 
		:LV_OUT_SUCCESS, :OUT_ERROR_CODE, :OUT_ERROR_MESSAGE);
	
		COMMIT;
			
	
	OUT_SUCCESS := :LV_OUT_SUCCESS;
	END IF;
	
	
	-- Section 3 Operation Info--------------------------------------------------------------------
	IF :IN_STEP_NO = 3 OR :IN_STEP_NO = 4 OR :IN_STEP_NO = 5 
	THEN
	    
		CALL "REGFORM_SECTION_3" 
		(:IN_REQUEST_NO, :IN_STEP_NO, :IN_ENTITY_CODE, :IN_USER_ID, :IS_RESEND, :IN_STATUS, 
		:ST_PROD_SERV, :ST_CAPACITY, :ST_CUSTOMER, :ST_OEM,
		:LV_OUT_SUCCESS, :OUT_ERROR_CODE, :OUT_ERROR_MESSAGE);

		COMMIT;
		
	OUT_SUCCESS := :LV_OUT_SUCCESS;
	END IF;
	
		
	-- Section 4 Disclosure Info--------------------------------------------------------------------
	IF :IN_STEP_NO = 4 OR :IN_STEP_NO = 5 
	THEN
	    
		CALL "REGFORM_SECTION_4" 
		(:IN_REQUEST_NO, :IN_STEP_NO, :IN_ENTITY_CODE, :IN_USER_ID, :IS_RESEND, :IN_STATUS, 
		:ST_DISC_FIELDS, :ST_DISC_RELATIVES, :ST_DISC_QACERT,
		:LV_OUT_SUCCESS, :OUT_ERROR_CODE, :OUT_ERROR_MESSAGE);
		
		COMMIT;	
		
		OUT_SUCCESS := :LV_OUT_SUCCESS;
	END IF;
		
	-- Section 5 Attachments--------------------------------------------------------------------
	IF :IN_STEP_NO = 5 
	THEN
	    
		CALL "REGFORM_SECTION_5" 
		(:IN_REQUEST_NO, :IN_STEP_NO, :IN_ENTITY_CODE, :IN_USER_ID, :IS_RESEND, :IN_STATUS, 
		:ST_ATTACH_FIELDS, :ST_ATTACH,
		:LV_OUT_SUCCESS, :OUT_ERROR_CODE, :OUT_ERROR_MESSAGE);
		
		COMMIT;	
		
		OUT_SUCCESS := :LV_OUT_SUCCESS;
			
	END IF;

	-- Section 6 - Submission Page--------------------------------------------------------------------
	IF :IN_STEP_NO = 6 AND (:IN_STATUS = 4 OR :IN_STATUS = 7)
	THEN

		CALL "REGFORM_SECTION_6" 
		(:IN_REQUEST_NO, :IN_STEP_NO, :IN_ENTITY_CODE, :IN_USER_ID, :IS_RESEND, :IN_STATUS, 
		:ST_EVENTS, 
		:LV_OUT_SUCCESS, :OUT_ERROR_CODE, :OUT_ERROR_MESSAGE, :OUT_EMAIL_TO);

		COMMIT;	
			
		OUT_SUCCESS := :LV_OUT_SUCCESS;
			
	END IF;
	
END