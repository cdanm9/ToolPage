PROCEDURE "REGFORM_EDIT_APPROVER" (
    IN IN_REQUEST_NO BIGINT,
	IN IN_STEP_NO INTEGER,
	IN IN_USER_ID NVARCHAR(100),
IN VENDOR_CODE_FLAG NVARCHAR(10),

    IN ST_MAIN "ST_REQUEST_INFO",
	IN ST_ADDRESS "ST_REGFORM_ADDRESS",
	IN ST_CONTACTS "ST_REGFORM_CONTACTS",

    -- IN EMPTY_STRUC "ST_REQUEST_INFO",
	
	IN EMPTY_ST_BANKS "ST_REGFORM_BANKS",
	IN EMPTY_ST_FINANCE "ST_REGFORM_FINANCIAL",    
	IN EMPTY_ST_OWNER "ST_REGFORM_OWNERS",
	
	IN EMPTY_ST_PROD_SERV "ST_REGFORM_PRODUCT_SERVICE",
	IN EMPTY_ST_CAPACITY "ST_REGFORM_CAPACITY",
	IN EMPTY_ST_CUSTOMER "ST_REGFORM_CUSTOMERS",
	IN EMPTY_ST_OEM "ST_REGFORM_OEM",
	
	IN EMPTY_ST_DISC_FIELDS "ST_REGFORM_DISCLOSURE_FIELDS",
	IN EMPTY_ST_DISC_RELATIVES "ST_REGFORM_DISCLOSURE_RELATIVES",
	IN EMPTY_ST_DISC_QACERT "ST_REGFORM_DISCLOSURE_QACERT",
	
	IN EMPTY_ST_ATTACH_FIELDS "ST_REGFORM_ATTACH_FIELDS",
    IN EMPTY_ST_ATTACH "ST_REGFORM_ATTACHMENTS",
	
	IN EMPTY_ST_REQUEST_EVENTS_LOG "ST_REQUEST_EVENTS_LOG",
    
    IN ST_UPDATED_FIELDS "VENDOR_PORTAL_MASTER_REGFORM_FIELDS_UPDATED",
    IN ST_LOGS "ST_SUPPLIER_PROFILE_LOG",
	
	OUT OUT_SUCCESS NVARCHAR(150),
	OUT OUT_ERROR_CODE BIGINT,
	OUT OUT_ERROR_MESSAGE VARCHAR(1000),
	OUT OUT_EMAIL_TO NVARCHAR(100)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
   -- Local Variables:
    DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
    DECLARE LV_OUT_PROC VARCHAR(150);
    DECLARE LV_FORM_TEMPID INTEGER;
    DECLARE LV_ADDR_TEMPID INTEGER;
    DECLARE LV_CONTACT_TEMPID INTEGER;
    DECLARE LV_PAYMENT_TEMPID INTEGER;

    DECLARE LV_REQUEST_TYPE INTEGER;
    -- DECLARE LV_STEP_NO INTEGER;
    DECLARE LV_ENTITY_CODE NVARCHAR(10);
    DECLARE LV_IS_RESEND NVARCHAR(5);
    DECLARE LV_STATUS INTEGER;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
        RESIGNAL SET MESSAGE_TEXT = ::SQL_ERROR_MESSAGE;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE INTO OUT_ERROR_CODE,OUT_ERROR_MESSAGE FROM DUMMY;
	OUT_ERROR_CODE := null;
	OUT_ERROR_MESSAGE := null;

    OUT_SUCCESS := null;  
	
    
    -- Get values of local variables from Request Info table
        SELECT "REQUEST_TYPE", "ENTITY_CODE", "REQUEST_RESENT", "STATUS"  
        INTO LV_REQUEST_TYPE, LV_ENTITY_CODE, LV_IS_RESEND, LV_STATUS FROM "VENDOR_PORTAL_REQUEST_INFO" 
        WHERE "REQUEST_NO" = :IN_REQUEST_NO;
    
    -- 1) Insert into Main Table:
        SELECT COUNT(*) into LV_FORM_TEMPID FROM "VENDOR_PORTAL_REQUEST_INFO_TEMP" 
    	WHERE "REQUEST_NO" = :IN_REQUEST_NO;
	
	    LV_FORM_TEMPID := :LV_FORM_TEMPID + 1;
	    
        -- 1) Insert into Main Table:
		INSERT INTO "VENDOR_PORTAL_REQUEST_INFO_TEMP"  
			(
			"REQUEST_NO", "TEMP_ID","SAP_VENDOR_CODE","IVEN_VENDOR_CODE","STATUS","REGISTERED_ID","ENTITY_CODE","REQUEST_TYPE",
			"CREATION_TYPE" ,"VENDOR_NAME1","VENDOR_NAME2","VENDOR_CODE","APPROVER_LEVEL" ,"APPROVER_ROLE","NEXT_APPROVER",
			"REQUESTER_ID","SUPPL_TYPE","SUPPL_TYPE_DESC","BP_TYPE_CODE","BP_TYPE_DESC","REQUEST_RESENT","MDG_CR_NO","LAST_ACTIVE_REQ_NO",
			"SECONDARY_EMAILS_ID","WEBSITE","LEGAL_STRUCTURE","LEGAL_STRUCTURE_OTHER","ESTAB_YEAR",
			"NO_OF_EMP","NO_OF_ENGG","NO_OF_QUALITY","NO_OF_PROD","NO_OF_ADMIN","NO_OF_OTHERS",
			"BUSINESS_TYPE","TRADE_LIC_NO","TRADE_LIC_NO_DATE","VAT_REG_NUMBER","VAT_REG_DATE",
			"SUPPL_CATEGORY","SUPPL_CATEGORY_DESC","ACTIVITY_TYPE","ORDER_SIZE_MIN","ORDER_SIZE_MAX","TOTAL_PROD_CAPACITY",
			"LAST_SAVED_STEP" ,"COMPLETED_BY","COMPLETED_BY_POSITION","ACK_VALIDATION",
			"SUBMISSION_DATE","LAST_UPDATED_ON","OT_PARENT_ID","OT_FOLDER1_ID","OT_FOLDER2_ID","OT_FOLDER3_ID","OT_FOLDER4_ID","VAT_CHECK",
			"ICV_SCORE","ICV_DATE","ICV_CHECK","NDA_TYPE","REMINDER_COUNT","BUYER_ASSIGN_CHECK","CREATED_ON","COMMENT","LEGACY_ID"
		)
		SELECT 
		:IN_REQUEST_NO,:LV_FORM_TEMPID,"SAP_VENDOR_CODE","IVEN_VENDOR_CODE","STATUS","REGISTERED_ID","ENTITY_CODE","REQUEST_TYPE" ,
		"CREATION_TYPE" ,"VENDOR_NAME1","VENDOR_NAME2","VENDOR_CODE","APPROVER_LEVEL" ,"APPROVER_ROLE","NEXT_APPROVER",
		"REQUESTER_ID","SUPPL_TYPE","SUPPL_TYPE_DESC","BP_TYPE_CODE","BP_TYPE_DESC","REQUEST_RESENT","MDG_CR_NO","LAST_ACTIVE_REQ_NO",
		"SECONDARY_EMAILS_ID","WEBSITE","LEGAL_STRUCTURE","LEGAL_STRUCTURE_OTHER","ESTAB_YEAR",
		"NO_OF_EMP","NO_OF_ENGG","NO_OF_QUALITY","NO_OF_PROD","NO_OF_ADMIN","NO_OF_OTHERS",
		"BUSINESS_TYPE","TRADE_LIC_NO","TRADE_LIC_NO_DATE","VAT_REG_NUMBER","VAT_REG_DATE",
		"SUPPL_CATEGORY","SUPPL_CATEGORY_DESC","ACTIVITY_TYPE","ORDER_SIZE_MIN","ORDER_SIZE_MAX","TOTAL_PROD_CAPACITY",
		"LAST_SAVED_STEP" ,"COMPLETED_BY","COMPLETED_BY_POSITION","ACK_VALIDATION",
		"SUBMISSION_DATE","LAST_UPDATED_ON","OT_PARENT_ID","OT_FOLDER1_ID","OT_FOLDER2_ID","OT_FOLDER3_ID","OT_FOLDER4_ID","VAT_CHECK",
		"ICV_SCORE","ICV_DATE","ICV_CHECK","NDA_TYPE","REMINDER_COUNT","BUYER_ASSIGN_CHECK","CREATED_ON","COMMENT","LEGACY_ID"

		FROM "VENDOR_PORTAL_REQUEST_INFO"
        WHERE "REQUEST_NO" = :IN_REQUEST_NO;
    
    
    -- 2) Insert into Address Table:
        SELECT COUNT(*) into LV_ADDR_TEMPID FROM "VENDOR_PORTAL_REGFORM_ADDRESS_TEMP" 
    	WHERE "REQUEST_NO" = :IN_REQUEST_NO;
    	
    	LV_ADDR_TEMPID := :LV_ADDR_TEMPID + 1;
    
		INSERT INTO "VENDOR_PORTAL_REGFORM_ADDRESS_TEMP" 
		(
			"REQUEST_NO", "TEMP_ID", "SR_NO", "ADDRESS_TYPE", "ADDRESS_DESC", "HOUSE_NUM1", "STREET1", "STREET2", "STREET3", "STREET4","CITY", "STATE", "COUNTRY", 
			"POSTAL_CODE", "CONTACT_TELECODE", "CONTACT_NO", "FAX_NO", "EMAIL", "DISTRICT"
		)
		SELECT 	:IN_REQUEST_NO, :LV_ADDR_TEMPID, "SR_NO", "ADDRESS_TYPE", "ADDRESS_DESC", "HOUSE_NUM1", "STREET1", "STREET2", "STREET3", "STREET4","CITY", "STATE", "COUNTRY", 
			"POSTAL_CODE", "CONTACT_TELECODE", "CONTACT_NO", "FAX_NO", "EMAIL", "DISTRICT"
		FROM "VENDOR_PORTAL_REGFORM_ADDRESS"
    	WHERE "REQUEST_NO" = :IN_REQUEST_NO;   
    
    
    -- 3) Insert into Contacts Table    
        SELECT COUNT(*) into LV_CONTACT_TEMPID FROM "VENDOR_PORTAL_REGFORM_CONTACTS_TEMP" 
    	WHERE "REQUEST_NO" = :IN_REQUEST_NO;
    	
    	LV_CONTACT_TEMPID := :LV_CONTACT_TEMPID + 1;
    	
		INSERT INTO "VENDOR_PORTAL_REGFORM_CONTACTS_TEMP" 
		(
			"REQUEST_NO", "TEMP_ID", "SR_NO","NAME1","NAME2","HOUSE_NUM1","STREET1","STREET2","DESIGNATION","EMAIL","CONTACT_NO","MOBILE_NO", "NATIONALITY","PASSPORT_NO","CONTACT_TYPE","CONTACT_TELECODE","MOBILE_TELECODE","CITY","BP_ID",
			"STATE", "POSTAL_CODE"
		)
		SELECT 	:IN_REQUEST_NO, :LV_CONTACT_TEMPID, "SR_NO","NAME1","NAME2","HOUSE_NUM1","STREET1","STREET2","DESIGNATION","EMAIL","CONTACT_NO","MOBILE_NO", "NATIONALITY","PASSPORT_NO","CONTACT_TYPE","CONTACT_TELECODE","MOBILE_TELECODE","CITY","BP_ID",
			"STATE", "POSTAL_CODE"
		FROM "VENDOR_PORTAL_REGFORM_CONTACTS"
    	WHERE "REQUEST_NO" = :IN_REQUEST_NO;
    
    -- 4) Insert into Payments (Bank) Table
        -- SELECT COUNT(*) into LV_PAYMENT_TEMPID FROM "VENDOR_PORTAL_REGFORM_BANKS_TEMP" 
    	-- WHERE "REQUEST_NO" = :IN_REQUEST_NO;
    	
    	-- LV_PAYMENT_TEMPID := :LV_PAYMENT_TEMPID + 1;
    	
		-- INSERT INTO "VENDOR_PORTAL_REGFORM_BANKS_TEMP" 
		-- (
		-- 	"REQUEST_NO","TEMP_ID","SR_NO","NAME","BENEFICIARY","ACCOUNT_NO","ACCOUNT_NAME","ACCOUNT_HOLDER","BANK_ID","BANK_KEY","BANK_COUNTRY","BRANCH_NAME","IBAN_NUMBER","SWIFT_CODE","BIC_CODE","ROUTING_CODE","OTHER_CODE_NAME","OTHER_CODE_VAL","PAYMENT_METHOD","PAYMENT_METHOD_DESC","PAYMENT_TERMS","PAYMENT_TERMS_DESC","INVOICE_CURRENCY","VAT_REG_NUMBER","VAT_REG_DATE","DUNS_NUMBER","BANK_CURRENCY","BANK_NO","PAYMENT_TYPE"
		-- )
		-- SELECT 	:IN_REQUEST_NO, :LV_PAYMENT_TEMPID,"SR_NO","NAME","BENEFICIARY","ACCOUNT_NO","ACCOUNT_NAME","ACCOUNT_HOLDER","BANK_ID","BANK_KEY","BANK_COUNTRY","BRANCH_NAME","IBAN_NUMBER","SWIFT_CODE","BIC_CODE","ROUTING_CODE","OTHER_CODE_NAME","OTHER_CODE_VAL","PAYMENT_METHOD","PAYMENT_METHOD_DESC","PAYMENT_TERMS","PAYMENT_TERMS_DESC","INVOICE_CURRENCY","VAT_REG_NUMBER","VAT_REG_DATE","DUNS_NUMBER","BANK_CURRENCY","BANK_NO","PAYMENT_TYPE"
		-- FROM "VENDOR_PORTAL_REGFORM_BANKS"
    	-- WHERE "REQUEST_NO" = :IN_REQUEST_NO;
    
   
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
    
    -- CALL "VENDOR_PORTAL"."VENDOR_PORTAL.Procedure::ONBOARDING_DRAFTV2" 
    -- (:IN_REQUEST_NO, :IN_STEP_NO,:ENTITY_CODE,:IN_USER_ID, :IN_IS_RESEND, :IN_STATUS, 
    --     :ST_MAIN, :ST_ADDRESS, :ST_CONTACTS,
    --     :ST_PAYMENTS, :ST_FINANCE, :ST_OWNER, 
    --     :ST_PROD_SERV, :ST_CAPACITY, :ST_CUSTOMER, :ST_OEM, 
    --     :ST_DISC_FIELDS, :ST_DISC_RELATIVES, :ST_DISC_QACERT, 
    --     :ST_ATTACH_FIELDS, :ST_ATTACH, :ST_UPDATED_FIELDS, :LV_OUT_PROC
    -- );

    -- IN IN_REQUEST_NO BIGINT,
	-- IN IN_REQUEST_TYPE INTEGER,
	-- IN IN_STEP_NO INTEGER,
	-- IN IN_ENTITY_CODE NVARCHAR(10),
	-- IN IN_USER_ID NVARCHAR(100),
	-- IN IS_RESEND NVARCHAR(5),
	-- IN IN_STATUS INTEGER,

    CALL "REGFORM_DRAFT_SUBMIT" 
    (:IN_REQUEST_NO, :LV_REQUEST_TYPE, :IN_STEP_NO,:LV_ENTITY_CODE,:IN_USER_ID, :LV_IS_RESEND, :LV_STATUS, 
:VENDOR_CODE_FLAG,   
	:ST_MAIN, :ST_ADDRESS, :ST_CONTACTS, 
        :EMPTY_ST_BANKS, :EMPTY_ST_FINANCE, :EMPTY_ST_OWNER, 
        :EMPTY_ST_PROD_SERV, :EMPTY_ST_CAPACITY, :EMPTY_ST_CUSTOMER, 
        :EMPTY_ST_OEM, :EMPTY_ST_DISC_FIELDS, :EMPTY_ST_DISC_RELATIVES, 
        :EMPTY_ST_DISC_QACERT, :EMPTY_ST_ATTACH_FIELDS, :EMPTY_ST_ATTACH, :ST_UPDATED_FIELDS,
        :EMPTY_ST_REQUEST_EVENTS_LOG,:LV_OUT_PROC, :OUT_ERROR_CODE, :OUT_ERROR_MESSAGE,:OUT_EMAIL_TO
    );

-- DELETE FROM "VENDOR_PORTAL_MASTER_REGFORM_FIELDS_UPDATED" WHERE "REQ_NO" = :IN_REQUEST_NO;
-- INSERT INTO "VENDOR_PORTAL_MASTER_REGFORM_FIELDS_UPDATED" 
-- (
-- 	"REQ_NO","S1G1T1F1","S1G1T1F2","S1G1T1F3","S1G1T1F4","S1G1T1F5","S1G1T1F6","S1G1T1F7","S1G1T1F8","S1G1T1F9","S1G1T1F10","S1G1T1F11","S1G2T2F1","S1G2T2F2","S1G2T2F3","S1G3T1F1","S1G4T1F1","S1G4T2F1","S1G4T3F1","S1G4T4F1","S1G4T5F1","S1G4T6F1","S1G4T7F1","S1G4T8F1","S1G4T9F1","S2G1T1F1","S2G1T1F2","S2G1T1F3","S2G1T1F4","S2G1T1F5","S2G1T1F6","S2G1T1F7","S2G1T1F8","S2G1T1F9","S2G1T2F10","S2G1T2F11","S2G1T2F12","S2G1T3F13","S2G1T3F14","S2G1T4F15","S2G2T1F1","S2G3T1F1","S2G3T1F2","S3G1T1F1","S3G1T1F2","S3G1T1F3","S3G1T1F4","S3G1T1F5","S3G2T1F1","S3G3T1F1","S3G3T1F2","S3G4T1F1","S3G5T1F1","S3G5T2F1","S4G1D1","S4G2D1","S4G3D1","S4G4D1","S4G5D1","S4G7D1","S4G8D1","S4G9D1","S4G9D2","S4G9D3","S4G9D4","S4G10D1","S4G10D2","S4G11D1","S4G12D1","S4G12D2","S4G12D3","S4G12D4","S4G12D5","S4G12D6","S4G12D7","S4G12D8","S4G12D9","S4G12D10","S4G13D1","S4G13D2","S4G13D3","S4G13D4","S4G13D5","S4G13D6","S4G14D1","S4G14D2","S4G14D3","S4G14D4","S4G14D5","S4G14D6","S4G14D7","S4G14D8","S4G14D9","S4G14D10","S4G14D11","S4G14D12","S4G14D13","S4G15D1","S4G15D2","S4G15D3","S4G15D4","S4G16D1","S4G17D1","S4G17D2","S4G18D1","S4G18D2","S4G18D3","S4G18D4","S4G19D1","S4G19D2","S5A1F1","S5A2F1","S5A3F1","S5A4F1","S5A5F1","S5A5F2","S5A6F1","S5A7F1","S5A7F2","S5A9F1","S5A10F1","S5A11F1","S5A12F1","S5A13F1","S5A14F1","S5A15F1","S5A16F1","S5A17F1","S5A18F1","S5A19F1","S5A20F1","S5A21F1","S3G2T2F6","S3G2T2F5","S3G2T2F4","S3G2T2F3","S3G2T2F2","S3G2T2F1","S2G3T1F6","S2G3T1F5","S2G3T1F4","S2G3T1F3","S2G2T4F1","S2G2T3F1","S2G2T2F1","S1G2T2F8","S1G2T2F7","S1G2T2F6","S1G2T2F5","S1G2T2F4","S1G2T1F5","S1G2T1F4","S1G2T1F3","S1G2T1F2","S1G2T1F1","S1G1T2F1","S1G1T2F2","S1G1T2F3","S1G1T2F4","S1G1T2F5","S1G1T2F6","S1G1T2F7","S1G1T2F8","S1G1T2F9","S1G1T2F10","S1G5T1F1","S1G5T2F1","S3G5T1F2","S3G5T1F3","S3G5T1F4","S3G5T2F2","S3G5T2F3","S3G5T2F4","S7G1D1","S7G1D2","S7G1D3","S7G1D4","S1G1T1F12","S1G1T2F11","S2G2T5F1","S5A5F3","S5A5F4","S2G1T1F10","S2G1T1F11","S2G1T5F1","S2G1T5F2","S2G1T5F3","S2G1T5F4","S2G1T5F5","S2G1T5F6","S2G1T5F7","S2G1T5F8","S2G1T5F9","S2G1T5F10","S2G1T5F11","S2G1T5F12","S2G1T5F13","S1G1T1F13","S1G1T1F14","S1G1T1F15","S1G1T2F12","S1G1T2F13","S1G1T2F14","S1G2T1F6","S1G2T1F7","S1G2T2F9"
-- )
-- SELECT 	:IN_REQUEST_NO,"S1G1T1F1","S1G1T1F2","S1G1T1F3","S1G1T1F4","S1G1T1F5","S1G1T1F6","S1G1T1F7","S1G1T1F8","S1G1T1F9","S1G1T1F10","S1G1T1F11","S1G2T2F1","S1G2T2F2","S1G2T2F3","S1G3T1F1","S1G4T1F1","S1G4T2F1","S1G4T3F1","S1G4T4F1","S1G4T5F1","S1G4T6F1","S1G4T7F1","S1G4T8F1","S1G4T9F1","S2G1T1F1","S2G1T1F2","S2G1T1F3","S2G1T1F4","S2G1T1F5","S2G1T1F6","S2G1T1F7","S2G1T1F8","S2G1T1F9","S2G1T2F10","S2G1T2F11","S2G1T2F12","S2G1T3F13","S2G1T3F14","S2G1T4F15","S2G2T1F1","S2G3T1F1","S2G3T1F2","S3G1T1F1","S3G1T1F2","S3G1T1F3","S3G1T1F4","S3G1T1F5","S3G2T1F1","S3G3T1F1","S3G3T1F2","S3G4T1F1","S3G5T1F1","S3G5T2F1","S4G1D1","S4G2D1","S4G3D1","S4G4D1","S4G5D1","S4G7D1","S4G8D1","S4G9D1","S4G9D2","S4G9D3","S4G9D4","S4G10D1","S4G10D2","S4G11D1","S4G12D1","S4G12D2","S4G12D3","S4G12D4","S4G12D5","S4G12D6","S4G12D7","S4G12D8","S4G12D9","S4G12D10","S4G13D1","S4G13D2","S4G13D3","S4G13D4","S4G13D5","S4G13D6","S4G14D1","S4G14D2","S4G14D3","S4G14D4","S4G14D5","S4G14D6","S4G14D7","S4G14D8","S4G14D9","S4G14D10","S4G14D11","S4G14D12","S4G14D13","S4G15D1","S4G15D2","S4G15D3","S4G15D4","S4G16D1","S4G17D1","S4G17D2","S4G18D1","S4G18D2","S4G18D3","S4G18D4","S4G19D1","S4G19D2","S5A1F1","S5A2F1","S5A3F1","S5A4F1","S5A5F1","S5A5F2","S5A6F1","S5A7F1","S5A7F2","S5A9F1","S5A10F1","S5A11F1","S5A12F1","S5A13F1","S5A14F1","S5A15F1","S5A16F1","S5A17F1","S5A18F1","S5A19F1","S5A20F1","S5A21F1","S3G2T2F6","S3G2T2F5","S3G2T2F4","S3G2T2F3","S3G2T2F2","S3G2T2F1","S2G3T1F6","S2G3T1F5","S2G3T1F4","S2G3T1F3","S2G2T4F1","S2G2T3F1","S2G2T2F1","S1G2T2F8","S1G2T2F7","S1G2T2F6","S1G2T2F5","S1G2T2F4","S1G2T1F5","S1G2T1F4","S1G2T1F3","S1G2T1F2","S1G2T1F1","S1G1T2F1","S1G1T2F2","S1G1T2F3","S1G1T2F4","S1G1T2F5","S1G1T2F6","S1G1T2F7","S1G1T2F8","S1G1T2F9","S1G1T2F10","S1G5T1F1","S1G5T2F1","S3G5T1F2","S3G5T1F3","S3G5T1F4","S3G5T2F2","S3G5T2F3","S3G5T2F4","S7G1D1","S7G1D2","S7G1D3","S7G1D4","S1G1T1F12","S1G1T2F11","S2G2T5F1","S5A5F3","S5A5F4","S2G1T1F10","S2G1T1F11","S2G1T5F1","S2G1T5F2","S2G1T5F3","S2G1T5F4","S2G1T5F5","S2G1T5F6","S2G1T5F7","S2G1T5F8","S2G1T5F9","S2G1T5F10","S2G1T5F11","S2G1T5F12","S2G1T5F13","S1G1T1F13","S1G1T1F14","S1G1T1F15","S1G1T2F12","S1G1T2F13","S1G1T2F14","S1G2T1F6","S1G2T1F7","S1G2T2F9"
-- FROM :ST_UPDATED_FIELDS;

    INSERT INTO "VENDOR_PORTAL_SUPPLIER_PROFILE_LOG" 
    (
		"SAP_VENDOR_CODE", "EVENT_NO", "EVENT_CODE","EVENT_TYPE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "UPDATED_ON","UPDATED_FIELD_NAME",
		"CHANGE_VALUE","ORG_VALUE","REQUEST_NO"
    )
    SELECT "SAP_VENDOR_CODE", "EVENT_NO", "EVENT_CODE", "EVENT_TYPE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", :LV_CURR_TIMESTAMP,"UPDATED_FIELD_NAME",
    		"CHANGE_VALUE","ORG_VALUE","REQUEST_NO"
    		 FROM :ST_LOGS;
	
	
            
    IF :LV_OUT_PROC IS NOT NULL 
	THEN
        
        OUT_SUCCESS := :LV_OUT_PROC;
        COMMIT;	
		
	END IF;
   
   
END