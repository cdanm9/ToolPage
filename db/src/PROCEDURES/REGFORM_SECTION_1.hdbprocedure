PROCEDURE "REGFORM_SECTION_1" (
    IN IN_REQUEST_NO BIGINT,
	IN IN_STEP_NO INTEGER,
	IN IN_ENTITY_CODE NVARCHAR(10),
	IN USER_ID NVARCHAR(100),
	IN IS_RESEND NVARCHAR(5),
	IN IN_STATUS INTEGER,

    IN ST_MAIN "ST_REQUEST_INFO",
	IN ST_ADDRESS "ST_REGFORM_ADDRESS",
	IN ST_CONTACTS "ST_REGFORM_CONTACTS",
	
	-- IN ST_PAYMENT "ST_REGFORM_BANKS",
	-- IN ST_FINANCE "ST_REGFORM_FINANCIAL",
	-- IN ST_OWNER "ST_REGFORM_OWNERS",
	
	-- IN ST_PROD_SERV "ST_REGFORM_PRODUCT_SERVICE",
	-- IN ST_CAPACITY "ST_REGFORM_CAPACITY",
	-- IN ST_CUSTOMER "ST_REGFORM_CUSTOMERS",
	-- IN ST_OEM "ST_REGFORM_OEM",
	
	-- IN ST_DISC_FIELDS "ST_REGFORM_DISCLOSURE_FIELDS",
	-- IN ST_DISC_RELATIVES "ST_REGFORM_DISCLOSURE_RELATIVES",
	-- IN ST_DISC_QACERT "ST_REGFORM_DISCLOSURE_QACERT",
	
	-- IN ST_ATTACH_FIELDS "ST_REGFORM_ATTACH_FIELDS",
    -- IN ST_ATTACH "ST_REGFORM_ATTACHMENTS",
	
	OUT OUT_SUCCESS NVARCHAR(100),
	OUT OUT_ERROR_CODE BIGINT,
	OUT OUT_ERROR_MESSAGE VARCHAR(1000) 
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN

   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:
	DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
	DECLARE LV_SAVED_AS_DRAFT NVARCHAR(1);
	DECLARE LV_OBR_COUNT INTEGER;
-- 	DECLARE LV_STATUS INTEGER := 4; -- Draft status - In Progress
	--Opentext Values
	DECLARE LV_IVEN_VENDOR_CODE INTEGER;
	DECLARE LV_OT_COUNT INTEGER;
	DECLARE LV_OT_PARENT_ID NVARCHAR(25);
	DECLARE LV_OT_FOLDER1_ID NVARCHAR(25);
	DECLARE LV_OT_FOLDER2_ID NVARCHAR(25);
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
    SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE INTO OUT_ERROR_CODE,OUT_ERROR_MESSAGE FROM DUMMY;
    OUT_ERROR_CODE := null;
    OUT_ERROR_MESSAGE := null;
    	
    
    OUT_SUCCESS := null;
    LV_OBR_COUNT := 0;
    
    -- Local Variable values assigning
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
    
    
	-- Section 1: General Info--------------------------------------------------------------------
	IF :IN_STEP_NO = 1 OR :IN_STEP_NO = 2 OR :IN_STEP_NO = 3 OR :IN_STEP_NO = 4 OR :IN_STEP_NO = 5 
	THEN
	
	    -- Delete existing section one data
		DELETE FROM "VENDOR_PORTAL_REQUEST_INFO" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		DELETE FROM "VENDOR_PORTAL_REGFORM_ADDRESS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
		DELETE FROM "VENDOR_PORTAL_REGFORM_CONTACTS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
	
	-- 1) Insert into Main Table:
		INSERT INTO "VENDOR_PORTAL_REQUEST_INFO"  
			(
			"REQUEST_NO","SAP_VENDOR_CODE","IVEN_VENDOR_CODE","STATUS" ,"REGISTERED_ID","ENTITY_CODE","REQUEST_TYPE" ,
			"CREATION_TYPE" ,"VENDOR_NAME1","VENDOR_NAME2","VENDOR_CODE","APPROVER_LEVEL" ,"APPROVER_ROLE","NEXT_APPROVER",
			"REQUESTER_ID","SUPPL_TYPE","SUPPL_TYPE_DESC","BP_TYPE_CODE","BP_TYPE_DESC","REQUEST_RESENT","MDG_CR_NO","LAST_ACTIVE_REQ_NO" ,
			"SECONDARY_EMAILS_ID","WEBSITE","LEGAL_STRUCTURE","LEGAL_STRUCTURE_OTHER","ESTAB_YEAR",
			"NO_OF_EMP","NO_OF_ENGG","NO_OF_QUALITY","NO_OF_PROD","NO_OF_ADMIN","NO_OF_OTHERS",
			"BUSINESS_TYPE","TRADE_LIC_NO","TRADE_LIC_NO_DATE","VAT_REG_NUMBER","VAT_REG_DATE",
			"SUPPL_CATEGORY","SUPPL_CATEGORY_DESC","ACTIVITY_TYPE","ORDER_SIZE_MIN","ORDER_SIZE_MAX","TOTAL_PROD_CAPACITY",
			"LAST_SAVED_STEP" ,"COMPLETED_BY","COMPLETED_BY_POSITION","ACK_VALIDATION",
			"SUBMISSION_DATE","LAST_UPDATED_ON","OT_PARENT_ID","OT_FOLDER1_ID","OT_FOLDER2_ID","OT_FOLDER3_ID","OT_FOLDER4_ID","VAT_CHECK",
			"ICV_SCORE","ICV_DATE","ICV_CHECK","NDA_TYPE","REMINDER_COUNT","BUYER_ASSIGN_CHECK","CREATED_ON","COMMENT","LEGACY_ID"
		)
		SELECT 
		:IN_REQUEST_NO,"SAP_VENDOR_CODE","IVEN_VENDOR_CODE",:IN_STATUS ,"REGISTERED_ID","ENTITY_CODE","REQUEST_TYPE" ,
		"CREATION_TYPE" ,"VENDOR_NAME1","VENDOR_NAME2","VENDOR_CODE","APPROVER_LEVEL" ,"APPROVER_ROLE","NEXT_APPROVER",
		"REQUESTER_ID","SUPPL_TYPE","SUPPL_TYPE_DESC","BP_TYPE_CODE","BP_TYPE_DESC",:IS_RESEND,"MDG_CR_NO","LAST_ACTIVE_REQ_NO" ,
		"SECONDARY_EMAILS_ID","WEBSITE","LEGAL_STRUCTURE","LEGAL_STRUCTURE_OTHER","ESTAB_YEAR",
		"NO_OF_EMP","NO_OF_ENGG","NO_OF_QUALITY","NO_OF_PROD","NO_OF_ADMIN","NO_OF_OTHERS",
		"BUSINESS_TYPE","TRADE_LIC_NO","TRADE_LIC_NO_DATE","VAT_REG_NUMBER","VAT_REG_DATE",
		"SUPPL_CATEGORY","SUPPL_CATEGORY_DESC","ACTIVITY_TYPE","ORDER_SIZE_MIN","ORDER_SIZE_MAX","TOTAL_PROD_CAPACITY",
		:IN_STEP_NO ,"COMPLETED_BY","COMPLETED_BY_POSITION","ACK_VALIDATION",
		"SUBMISSION_DATE",:LV_CURR_TIMESTAMP,"OT_PARENT_ID","OT_FOLDER1_ID","OT_FOLDER2_ID","OT_FOLDER3_ID","OT_FOLDER4_ID","VAT_CHECK",
		"ICV_SCORE","ICV_DATE","ICV_CHECK","NDA_TYPE","REMINDER_COUNT","BUYER_ASSIGN_CHECK",:LV_CURR_TIMESTAMP,"COMMENT","LEGACY_ID"

		FROM :ST_MAIN;
		
				-- Insert OpenText ids into VENDOR_PORTAL_REGFORM_FOLDER_IDS 
		SELECT "IVEN_VENDOR_CODE","OT_PARENT_ID","OT_FOLDER1_ID","OT_FOLDER2_ID" 
		INTO LV_IVEN_VENDOR_CODE,LV_OT_PARENT_ID,LV_OT_FOLDER1_ID, LV_OT_FOLDER2_ID  FROM :ST_MAIN;
        
        SELECT COUNT(*) INTO LV_OT_COUNT FROM "VENDOR_PORTAL_REGFORM_FOLDER_IDS" 
        WHERE "IVEN_VENDOR_CODE" = :LV_IVEN_VENDOR_CODE;
        
        IF :LV_OT_COUNT = 0 THEN
    	    INSERT INTO "VENDOR_PORTAL_REGFORM_FOLDER_IDS" VALUES(
            :LV_IVEN_VENDOR_CODE,:LV_OT_PARENT_ID,:LV_OT_FOLDER1_ID,:LV_OT_FOLDER2_ID,null,null,null);
        END IF;
	
	-- 2) Insert into Address Table: 
		INSERT INTO "VENDOR_PORTAL_REGFORM_ADDRESS" 
		(
			"REQUEST_NO", "SR_NO", "ADDRESS_TYPE", "ADDRESS_DESC", "HOUSE_NUM1", "STREET1", "STREET2", "STREET3", "STREET4","CITY", "STATE", "COUNTRY",  
			"POSTAL_CODE", "CONTACT_TELECODE", "CONTACT_NO", "FAX_NO", "EMAIL", "DISTRICT"
		)
		SELECT 	:IN_REQUEST_NO, "SR_NO", "ADDRESS_TYPE", "ADDRESS_DESC", "HOUSE_NUM1", "STREET1", "STREET2", "STREET3", "STREET4","CITY", "STATE", "COUNTRY",  
			"POSTAL_CODE", "CONTACT_TELECODE", "CONTACT_NO", "FAX_NO", "EMAIL", "DISTRICT"
		FROM :ST_ADDRESS;
		
	-- 3) Insert into Contacts 
		INSERT INTO "VENDOR_PORTAL_REGFORM_CONTACTS" 
		(
			"REQUEST_NO", "SR_NO","NAME1","NAME2","HOUSE_NUM1","STREET1","STREET2","DESIGNATION","EMAIL","CONTACT_NO","MOBILE_NO", "NATIONALITY","PASSPORT_NO","CONTACT_TYPE","CONTACT_TELECODE","MOBILE_TELECODE","CITY","BP_ID",
			"STATE", "POSTAL_CODE"
		)
		SELECT 	:IN_REQUEST_NO, "SR_NO","NAME1","NAME2","HOUSE_NUM1","STREET1","STREET2","DESIGNATION","EMAIL","CONTACT_NO","MOBILE_NO", "NATIONALITY","PASSPORT_NO","CONTACT_TYPE","CONTACT_TELECODE","MOBILE_TELECODE","CITY","BP_ID",
			"STATE", "POSTAL_CODE"
		FROM :ST_CONTACTS;
		
		
		-- COMMIT;
	
		
	OUT_SUCCESS := :IN_REQUEST_NO;
	END IF;
	
	
	
END