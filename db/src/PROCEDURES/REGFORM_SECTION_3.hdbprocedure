PROCEDURE "REGFORM_SECTION_3" (
    IN IN_REQUEST_NO BIGINT,
	IN IN_STEP_NO INTEGER,
	IN IN_ENTITY_CODE NVARCHAR(10),
	IN IN_USER_ID NVARCHAR(100),
	IN IS_RESEND NVARCHAR(5),
	IN IN_STATUS INTEGER,

    -- IN ST_MAIN "ST_REQUEST_INFO",
	-- IN ST_ADDRESS "ST_REGFORM_ADDRESS",
	-- IN ST_CONTACTS "ST_REGFORM_CONTACTS",
	
	-- IN ST_PAYMENT "ST_REGFORM_BANKS",
	-- IN ST_FINANCE "ST_REGFORM_FINANCIAL",
	-- IN ST_OWNER "ST_REGFORM_OWNERS",
	
	IN ST_PROD_SERV "ST_REGFORM_PRODUCT_SERVICE",
	IN ST_CAPACITY "ST_REGFORM_CAPACITY",
	IN ST_CUSTOMER "ST_REGFORM_CUSTOMERS",
	IN ST_OEM "ST_REGFORM_OEM",
	
	-- IN ST_DISC_FIELDS "ST_REGFORM_DISCLOSURE_FIELDS",
	-- IN ST_DISC_RELATIVES "ST_REGFORM_DISCLOSURE_RELATIVES",
	-- IN ST_DISC_QACERT "ST_REGFORM_DISCLOSURE_QACERT",
	
	-- IN ST_ATTACH_FIELDS "ST_REGFORM_ATTACH_FIELDS",
    -- IN ST_ATTACH "ST_REGFORM_ATTACHMENTS",
	
	OUT OUT_SUCCESS NVARCHAR(100),
	OUT OUT_ERROR_CODE BIGINT,
	OUT OUT_ERROR_MESSAGE VARCHAR(1000) 
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN

   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:
	DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
	DECLARE LV_SAVED_AS_DRAFT NVARCHAR(1);
	DECLARE LV_OBR_COUNT INTEGER;
-- 	DECLARE LV_STATUS INTEGER := 4; -- Draft status - In Progress
	--Opentext Values
	DECLARE LV_IVEN_VENDOR_CODE INTEGER;
	DECLARE LV_OT_COUNT INTEGER;
	DECLARE LV_OT_PARENT_ID NVARCHAR(25);
	DECLARE LV_OT_FOLDER1_ID NVARCHAR(25);
	DECLARE LV_OT_FOLDER2_ID NVARCHAR(25);
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
    SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE INTO OUT_ERROR_CODE,OUT_ERROR_MESSAGE FROM DUMMY;
    OUT_ERROR_CODE := null;
    OUT_ERROR_MESSAGE := null;
    	
    
    OUT_SUCCESS := null;
    LV_OBR_COUNT := 0;
    
    -- Local Variable values assigning
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
    
    
    	-- Section 3 Operation Info--------------------------------------------------------------------
	IF :IN_STEP_NO = 3 OR :IN_STEP_NO = 4 OR :IN_STEP_NO = 5 
        THEN
            
            -- Delete existing section one data
                DELETE FROM "VENDOR_PORTAL_REGFORM_PRODUCT_SERVICE" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
                DELETE FROM "VENDOR_PORTAL_REGFORM_CAPACITY" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
                DELETE FROM "VENDOR_PORTAL_REGFORM_CUSTOMERS" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
                DELETE FROM "VENDOR_PORTAL_REGFORM_OEM" WHERE "REQUEST_NO" = :IN_REQUEST_NO;
        
         
         -- 1) Insert into Main Table: (Addition of 5 fields in section 3 - ORDER_SIZE_MIN * ORDER_SIZE_MAX)
            
        -- 7) Insert into Product & Services Table
            INSERT INTO "VENDOR_PORTAL_REGFORM_PRODUCT_SERVICE" 
            (
                "REQUEST_NO", "SR_NO", "TYPE", "PROD_NAME", "PROD_DESCRIPTION", "PROD_CATEGORY", "PROD_CATEGORY_DEC"
            )
            SELECT 	:IN_REQUEST_NO, "SR_NO", "TYPE", "PROD_NAME", "PROD_DESCRIPTION", "PROD_CATEGORY", "PROD_CATEGORY_DEC"
            FROM :ST_PROD_SERV;
        
        -- 8) Insert into Production Capacity Table
            INSERT INTO "VENDOR_PORTAL_REGFORM_CAPACITY" 
            (
                "REQUEST_NO", "SR_NO", "CITY", "COUNTRY", "PLANT_MANF_CAPABILITY", "PROD_CAPACITY", "TIME_TO_SERVICE"
            )
            SELECT 	:IN_REQUEST_NO, "SR_NO", "CITY", "COUNTRY", "PLANT_MANF_CAPABILITY", "PROD_CAPACITY", "TIME_TO_SERVICE"
            FROM :ST_CAPACITY;   
            
        -- 9) Insert into Customers Table
            INSERT INTO "VENDOR_PORTAL_REGFORM_CUSTOMERS" 
            (
                "REQUEST_NO", "SR_NO", "CUSTOMER_NAME", "CUSTOMER_SHARE"
             )
            SELECT 	:IN_REQUEST_NO, "SR_NO", "CUSTOMER_NAME", "CUSTOMER_SHARE"
            FROM :ST_CUSTOMER;
            
        -- 10) Insert into OEM Table
            INSERT INTO "VENDOR_PORTAL_REGFORM_OEM" 
            (
                "REQUEST_NO", "SR_NO", "OEM_TYPE", "COMPANY_NAME", "COUNTRY", "OEM_CATEGORY"
             )
            SELECT 	:IN_REQUEST_NO, "SR_NO", "OEM_TYPE", "COMPANY_NAME", "COUNTRY", "OEM_CATEGORY"
            FROM :ST_OEM;
            
            COMMIT;
            
        OUT_SUCCESS := :IN_REQUEST_NO;
    END IF;    
	
	
END