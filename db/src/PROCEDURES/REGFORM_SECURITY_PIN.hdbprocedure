PROCEDURE "REGFORM_SECURITY_PIN" ( 
    IN IN_REGISTERED_ID VARCHAR(100),
    IN IN_SECURITY_PIN VARCHAR(6),
    
    OUT OUT_SUCCESS VARCHAR(100)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:
	DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
    DECLARE LV_ID_COUNT INTEGER; 
    OUT_SUCCESS := null;
    
    -- Local Variable values assigning
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
   
    -- Get Count for new EVENT_NO
	SELECT COUNT(*) into LV_ID_COUNT FROM "VENDOR_PORTAL_REQUEST_SECURITY_CODE" 
	WHERE "REGISTERED_ID" = :IN_REGISTERED_ID;
   
        IF :LV_ID_COUNT = 0
	    THEN
	        INSERT INTO "VENDOR_PORTAL_REQUEST_SECURITY_CODE"  VALUES (:IN_REGISTERED_ID, :IN_SECURITY_PIN, :LV_CURR_TIMESTAMP);
	    	COMMIT;
	    	
	    	OUT_SUCCESS := 'Success';
		
		ELSE
    	    UPDATE "VENDOR_PORTAL_REQUEST_SECURITY_CODE"
            SET 
            "SEC_CODE" = :IN_SECURITY_PIN,
            "CREATED_ON" = :LV_CURR_TIMESTAMP
            WHERE "REGISTERED_ID" = :IN_REGISTERED_ID;
		    COMMIT;
		
		    OUT_SUCCESS := 'Success';

        END IF;
   
END