PROCEDURE "REGSITERED_ID_EDIT" (    
    IN IN_REQUEST_NO BIGINT,
    IN IN_STATUS INTEGER,
    IN IN_NEW_EMAILID VARCHAR(100),
    -- IN ST_EVENTS "ST_REGISTERATION_EVENT_COMMENTS",
    IN ST_REQUEST_EVENTS_LOG "ST_REQUEST_EVENTS_LOG",
    OUT OUT_SUCCESS VARCHAR(100)
)
	LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:   
	DECLARE LV_CURR_TIMESTAMP TIMESTAMP;  
   -- Event Values                       
	DECLARE LV_EVENT_COUNT INTEGER;
	DECLARE LV_EVENT_NO INTEGER;
	DECLARE LV_EVENT_CODE INTEGER;
	DECLARE LV_REMARK NVARCHAR(50);

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
		RESIGNAL SET MESSAGE_TEXT = ::SQL_ERROR_MESSAGE; 

    -- SELECT * FROM "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
	-- WHERE "REQUEST_NO" = 'HELLO'; 
   
   OUT_SUCCESS := null;
   LV_EVENT_CODE := 20;
   
   IF :IN_STATUS IS NOT NULL
   THEN
   
        UPDATE "VENDOR_PORTAL_REQUEST_INFO"
            SET 
            "REGISTERED_ID" = :IN_NEW_EMAILID
            WHERE "REQUEST_NO" = :IN_REQUEST_NO;
       
    --    IF :IN_STATUS > 3
    -- 	THEN
       
    --         UPDATE "VENDOR_PORTAL_ONBOARDING_FORM"
    --         SET 
    --         "REGISTERED_ID" = :IN_NEW_EMAILID
    --         WHERE "OBR_NO" = :IN_REQUEST_NO;
            
    --     END IF;
        
        COMMIT;
        OUT_SUCCESS := 'Success';
        LV_REMARK := 'Registered Email ID Change';
    
    END IF;
    
    IF :OUT_SUCCESS = 'Success'
    THEN 
    
        -- Local Variable values assigning
        SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
    
        -- Get Count for new EVENT_NO
    	SELECT COUNT(*) into LV_EVENT_COUNT FROM "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
    	WHERE "REQUEST_NO" = :IN_REQUEST_NO;
    	
    	LV_EVENT_NO := LV_EVENT_COUNT + 1;
    
        INSERT INTO "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
    	(
    		"REQUEST_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "EVENT_TYPE", "CREATED_ON"
    	)
    	SELECT :IN_REQUEST_NO, :LV_EVENT_NO, :LV_EVENT_CODE, "USER_ID", "USER_NAME", :LV_REMARK, "COMMENT", "EVENT_TYPE", :LV_CURR_TIMESTAMP
    	FROM :ST_REQUEST_EVENTS_LOG;
        
        COMMIT;
    END IF; 
   
   
END