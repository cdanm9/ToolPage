PROCEDURE "SELF_REGISTRATION" (    
    IN IN_ENTITY_CODE NVARCHAR(50),
    IN IN_IVEN_VENDOR_CODE BIGINT,
    IN IN_SUPPLIER_NAME NVARCHAR(100),      
    IN IN_SUPPLIER_EMAIL VARCHAR(100),   
    IN IN_SUPPLIERTYPE_CODE VARCHAR(50),
    IN IN_REQUEST_TYPE INTEGER,
    IN IN_STATUS INTEGER,   
    IN IN_TRADE_LIC_NO VARCHAR(50),
    IN IN_BUYER_EMAIL VARCHAR(100),
    IN IN_SUPPLIER_COUNTRY VARCHAR(10),
	IN ST_MAIN "ST_REQUEST_INFO",
	IN ST_EVENTS "ST_REQUEST_EVENTS_LOG",    
	
	OUT OUT_SUCCESS1 VARCHAR(100),
	OUT OUT_REQUEST_INFO "ST_REQUEST_INFO",
	OUT OUT_SUCCESS2 VARCHAR(100)    
)
	LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name> 
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   -- Local Variables:
	DECLARE EVENT_COUNT NVARCHAR(50);
	DECLARE EVENT_NO,LV_EVENT_COUNT,LV_EVENT_NO INTEGER;
	DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
	DECLARE LV_OUT_SUCCESS1 VARCHAR(100);
	DECLARE LV_OUT_SUCCESS2 VARCHAR(100);
	DECLARE LV_SAP_VENDOR_CODE VARCHAR(100);
	DECLARE LV_REQUESTER_ID VARCHAR(100);
	DECLARE LV_REQUEST_NO BIGINT;
	
	DECLARE LV_NXT_APPROVER_ID NVARCHAR(100);
	DECLARE LV_NXT_APPROVER_LEVEL INTEGER;
	DECLARE LV_APPROVER_COUNT INTEGER;
	DECLARE LV_NXT_APPROVER_ROLE NVARCHAR(100);
	DECLARE LV_APPR_TYPE NVARCHAR(25);
	DECLARE LV_INDEX INTEGER;
	DECLARE LV_EVENTSDATA_COUNT INTEGER;
	DECLARE LV_CURR_DATE TIMESTAMP;
	DECLARE LV_COUNT INTEGER;   
	
	-- Additional Events related variables for multiple events
	DECLARE LV_EVENT_CODE INTEGER;
	DECLARE LV_EVENT_TYPE NVARCHAR(20);
	DECLARE LV_USER_ID NVARCHAR(100);
	DECLARE LV_USER_NAME NVARCHAR(100);
	DECLARE LV_REMARK NVARCHAR(100);
	DECLARE LV_COMMENT NVARCHAR(1000);   
	
	LV_SAP_VENDOR_CODE := null;
-- 	LV_REQUESTER_ID := :IN_BUYER_EMAIL; -- Creator / Buyer id
	LV_REQUESTER_ID := null;
	LV_NXT_APPROVER_ID := null;
	
	OUT_SUCCESS1 := null;
	OUT_SUCCESS2 := null;
	
	 SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
	 SELECT CURRENT_DATE INTO LV_CURR_DATE FROM DUMMY;
	
	------------------------------------------------------------------------------------------------------------------------
	    
	    -- Sequence for Request No.
        SELECT "REQUEST_NO".NEXTVAL INTO LV_REQUEST_NO FROM DUMMY;
	   
	   -- Sequence for iVen Vendor code.
	   SELECT "IVEN_VENDOR_CODE".NEXTVAL INTO IN_IVEN_VENDOR_CODE FROM DUMMY;
        
        -- Get Buyer from Matrix for Self Registraion as Created by & created by name
        --     SELECT "USER_ID" INTO LV_REQUESTER_ID
	   -- FROM "VENDOR_PORTAL.Table::SUPPLIER_REQUEST_MATRIX" 
	   -- WHERE "ENTITY_CODE" = :IN_ENTITY_CODE AND "USER_ROLE" = 'BYR';
	
	    -- Get Event count
	    
	    -- User Delagation check for Buyer (Approver)
	   -- SELECT COUNT(*)
    --     INTO LV_COUNT 
	   -- FROM "VENDOR_PORTAL.Table::USER_DELEGATION" 
	   -- WHERE "STATUS" = 'A' AND "ASSIGN_FROM" = :LV_REQUESTER_ID AND "DEL_TO_DATE" >= :LV_CURR_DATE AND "DEL_FROM_DATE" <= :LV_CURR_DATE;
	    
	   -- IF :LV_COUNT != 0
	   -- THEN
    -- 	    SELECT "ASSIGN_TO" 
    --         INTO LV_REQUESTER_ID 
    -- 	    FROM "VENDOR_PORTAL.Table::USER_DELEGATION" 
    -- 	    WHERE "STATUS" = 'A' AND "ASSIGN_FROM" = :LV_REQUESTER_ID AND "DEL_TO_DATE" >= :LV_CURR_DATE AND "DEL_FROM_DATE" <= :LV_CURR_DATE;
	   -- END IF;
		
        --REQUEST_INFO

    INSERT INTO "VENDOR_PORTAL_REQUEST_INFO"  
    (
    "REQUEST_NO","SAP_VENDOR_CODE","IVEN_VENDOR_CODE","STATUS" ,"REGISTERED_ID","ENTITY_CODE","REQUEST_TYPE" ,
    "CREATION_TYPE" ,"VENDOR_NAME1","VENDOR_NAME2","VENDOR_CODE","APPROVER_LEVEL" ,"APPROVER_ROLE","NEXT_APPROVER",
    "REQUESTER_ID","SUPPL_TYPE","SUPPL_TYPE_DESC","BP_TYPE_CODE","BP_TYPE_DESC","REQUEST_RESENT","MDG_CR_NO","LAST_ACTIVE_REQ_NO" ,
    "SECONDARY_EMAILS_ID","WEBSITE","LEGAL_STRUCTURE","LEGAL_STRUCTURE_OTHER","ESTAB_YEAR",
    "NO_OF_EMP","NO_OF_ENGG","NO_OF_QUALITY","NO_OF_PROD","NO_OF_ADMIN","NO_OF_OTHERS",
    "BUSINESS_TYPE","TRADE_LIC_NO","TRADE_LIC_NO_DATE","VAT_REG_NUMBER","VAT_REG_DATE",
    "SUPPL_CATEGORY","SUPPL_CATEGORY_DESC","ACTIVITY_TYPE","ORDER_SIZE_MIN","ORDER_SIZE_MAX","TOTAL_PROD_CAPACITY",
    "LAST_SAVED_STEP" ,"COMPLETED_BY","COMPLETED_BY_POSITION","ACK_VALIDATION",
    "SUBMISSION_DATE","LAST_UPDATED_ON","OT_PARENT_ID","OT_FOLDER1_ID","OT_FOLDER2_ID","OT_FOLDER3_ID","OT_FOLDER4_ID","VAT_CHECK",
    "ICV_SCORE","ICV_DATE","ICV_CHECK","NDA_TYPE","REMINDER_COUNT","BUYER_ASSIGN_CHECK","CREATED_ON","COMMENT","LEGACY_ID"
    )
    SELECT 
    :LV_REQUEST_NO,"SAP_VENDOR_CODE",:IN_IVEN_VENDOR_CODE,:IN_STATUS,"REGISTERED_ID","ENTITY_CODE","REQUEST_TYPE" ,
    "CREATION_TYPE" ,"VENDOR_NAME1","VENDOR_NAME2","VENDOR_CODE","APPROVER_LEVEL" ,"APPROVER_ROLE",:LV_NXT_APPROVER_ID,
    "REQUESTER_ID","SUPPL_TYPE","SUPPL_TYPE_DESC","BP_TYPE_CODE","BP_TYPE_DESC","REQUEST_RESENT","MDG_CR_NO","LAST_ACTIVE_REQ_NO" ,
    "SECONDARY_EMAILS_ID","WEBSITE","LEGAL_STRUCTURE","LEGAL_STRUCTURE_OTHER","ESTAB_YEAR",
    "NO_OF_EMP","NO_OF_ENGG","NO_OF_QUALITY","NO_OF_PROD","NO_OF_ADMIN","NO_OF_OTHERS",
    "BUSINESS_TYPE","TRADE_LIC_NO","TRADE_LIC_NO_DATE","VAT_REG_NUMBER","VAT_REG_DATE",
    "SUPPL_CATEGORY","SUPPL_CATEGORY_DESC","ACTIVITY_TYPE","ORDER_SIZE_MIN","ORDER_SIZE_MAX","TOTAL_PROD_CAPACITY",
    "LAST_SAVED_STEP" ,"COMPLETED_BY","COMPLETED_BY_POSITION","ACK_VALIDATION",
    "SUBMISSION_DATE",:LV_CURR_TIMESTAMP,"OT_PARENT_ID","OT_FOLDER1_ID","OT_FOLDER2_ID","OT_FOLDER3_ID","OT_FOLDER4_ID","VAT_CHECK",
    "ICV_SCORE","ICV_DATE","ICV_CHECK","NDA_TYPE","REMINDER_COUNT","BUYER_ASSIGN_CHECK",:LV_CURR_TIMESTAMP,"COMMENT","LEGACY_ID"
    
    FROM :ST_MAIN;

    -- FIRST INSERT THEN UPDATE HENCE COMMIT
    COMMIT;      

		
		-- Capture Events : -
		LV_INDEX := 0; -- Initial position of iteration

        -- SELECT COUNT(*) into LV_EVENT_COUNT FROM "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
        -- WHERE "REQUEST_NO" = :LV_REQUEST_NO;    
        
        -- LV_EVENT_NO := LV_EVENT_COUNT + 1;
            
        INSERT INTO "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
        (
            "REQUEST_NO", "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "EVENT_TYPE", "CREATED_ON"
        )      
        SELECT :LV_REQUEST_NO, "EVENT_NO", "EVENT_CODE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "EVENT_TYPE", :LV_CURR_TIMESTAMP
        FROM :ST_EVENTS;             
		
    -- Insert into View Status Table View
	INSERT INTO "VENDOR_PORTAL_REQUEST_ACTIVE_STATUS" VALUES(:LV_REQUEST_NO,null,:IN_REQUEST_TYPE, null,:IN_IVEN_VENDOR_CODE);

    --Insert Into Main SAP Table    
    INSERT INTO "VENDOR_PORTAL_MASTER_IVEN_SAP_VENDOR_NO" VALUES(:LV_SAP_VENDOR_CODE,:IN_IVEN_VENDOR_CODE,:IN_SUPPLIERTYPE_CODE);
        	    
	    -- Save the country entered in pre validation form. 10/04/2023

        --ADDRESS TABLE
	    INSERT INTO "VENDOR_PORTAL_REGFORM_ADDRESS" 
	        (
    			"REQUEST_NO", "SR_NO", "ADDRESS_TYPE", "ADDRESS_DESC", "COUNTRY"
	        )
	    VALUES(
	        :LV_REQUEST_NO, 1, 'HQ', 'Head Office', :IN_SUPPLIER_COUNTRY
        );

       -- Return Login data as recently created Update request
        OUT_REQUEST_INFO =  SELECT *
                FROM "VENDOR_PORTAL_REQUEST_INFO" WHERE "REQUEST_NO" = :LV_REQUEST_NO;       

-- 		OUT_REQUEST_INFO =  SELECT "REQUEST_NO" AS "REQUEST_NO",
-- 		"SAP_VENDOR_CODE" AS "SAP_VENDOR_CODE",
-- 	"VENDOR_NAME1" AS "VENDOR_NAME1", 
-- "VENDOR_CODE" AS "VENDOR_CODE", 
-- 		"REGISTERED_ID" AS "REGISTERED_ID",
-- 		"CREATED_ON" AS "CREATED_ON", 
-- 		"ENTITY_CODE" AS "ENTITY_CODE",
-- 		"STATUS" AS "STATUS",
-- 		"COMMENT" AS "COMMENT",
-- 		"REQUEST_TYPE" AS "REQUEST_TYPE",
-- 		"CREATION_TYPE" AS "CREATION_TYPE",
-- 		"SUPPL_TYPE_DESC" AS "SUPPL_TYPE_DESC",
-- 		"SUPPL_TYPE" AS "SUPPL_TYPE",
-- 		"BP_TYPE_DESC" AS "BP_TYPE_DESC",
-- 		"BP_TYPE_CODE" AS "BP_TYPE_CODE",
-- 		"IVEN_VENDOR_CODE" AS "IVEN_VENDOR_CODE",
-- 		"NEXT_APPROVER" AS "NEXT_APPROVER",      
-- 		"NDA_TYPE" AS "NDA_TYPE",
-- 		"REMINDER_COUNT" AS "REMINDER_COUNT",
-- 		"BUYER_ASSIGN_CHECK" AS "BUYER_ASSIGN_CHECK",
-- 		"LEGACY_ID" AS "LEGACY_ID"
		
-- 		FROM "VENDOR_PORTAL_REQUEST_INFO" WHERE "REQUEST_NO" = :LV_REQUEST_NO;
                
                COMMIT;          
                --Return Request no. of new update request`
                OUT_SUCCESS1 := :LV_REQUEST_NO;
                OUT_SUCCESS2 := :LV_REQUESTER_ID;                               
	   -- END IF;
END