PROCEDURE "VENDOR_INTERNAL_REQUEST" ( 
    IN REQUEST_NO BIGINT,
	IN IN_STEP_NO INTEGER,
	IN NDA_STATUS NVARCHAR(1),
	IN IN_ENTITY_CODE NVARCHAR(10),
	IN IN_IVEN_VENDOR_CODE BIGINT,
	IN SAP_VENDOR_CODE VARCHAR(10),
	IN IN_USER_ID NVARCHAR(100),
	IN IN_IS_RESEND NVARCHAR(5),
	IN IN_STATUS INTEGER,
	IN IN_OBR_ACTIVE BIGINT, 
	IN IN_REQUEST_TYPE INTEGER,
	IN IN_CREATION_TYPE INTEGER,
	IN ST_REQUEST_INFO "ST_REQUEST_INFO",
	IN ST_EVENTS "ST_REQUEST_EVENTS_LOG",
	IN ST_APP_EVENTS "ST_REQUEST_EVENTS_LOG",
	
    IN ST_MAIN "ST_REQUEST_INFO",
	IN ST_ADDRESS "ST_REGFORM_ADDRESS",
	IN ST_CONTACTS "ST_REGFORM_CONTACTS",
	
	IN ST_BANKS "ST_REGFORM_BANKS",
	IN ST_FINANCE "ST_REGFORM_FINANCIAL",
	IN ST_OWNER "ST_REGFORM_OWNERS",
	
	IN ST_PROD_SERV "ST_REGFORM_PRODUCT_SERVICE",
	IN ST_CAPACITY "ST_REGFORM_CAPACITY",
	IN ST_CUSTOMER "ST_REGFORM_CUSTOMERS",
	IN ST_OEM "ST_REGFORM_OEM",
	
	IN ST_DISC_FIELDS "ST_REGFORM_DISCLOSURE_FIELDS",
	IN ST_DISC_RELATIVES "ST_REGFORM_DISCLOSURE_RELATIVES",
	IN ST_DISC_QACERT "ST_REGFORM_DISCLOSURE_QACERT",
	
	IN ST_ATTACH_FIELDS "ST_REGFORM_ATTACH_FIELDS",
    IN ST_ATTACH "ST_REGFORM_ATTACHMENTS",
	IN ST_UPDATED_FIELDS "VENDOR_PORTAL_MASTER_REGFORM_FIELDS_UPDATED",
	IN ST_ONB_EVENTS "ST_REQUEST_EVENTS_LOG",
    -- IN ST_MAIN "ST_REQUEST_INFO",
	-- IN ST_ADDRESS "ST_ONBOARDING_ADDRESSES",
	-- IN ST_CONTACTS "ST_ONBOARDING_CONTACTS",
	
	-- IN ST_PAYMENT "ST_ONBOARDING_PAYMENTS",
	-- IN ST_FINANCE "ST_ONBOARDING_FINANCIAL",
	-- IN ST_OWNER "ST_ONBOARDING_OWNERS",
	
	-- IN ST_PROD_SERV "ST_ONBOARDING_PRODUCT_SERVICE",
	-- IN ST_CAPACITY "ST_ONBOARDING_CAPACITY",
	-- IN ST_CUSTOMER "ST_ONBOARDING_CUSTOMERS",
	-- IN ST_OEM "ST_ONBOARDING_OEM",
	
	-- IN ST_DISC_FIELDS "ST_ONBOARDING_DISCLOSURE_FIELDS",
	-- IN ST_DISC_RELATIVES "ST_ONBOARDING_DISCLOSURE_RELATIVES",
	-- IN ST_DISC_QACERT "ST_ONBOARDING_DISCLOSURE_QACERT",
	
	-- IN ST_ATTACH_FIELDS "ST_ONBOARDING_ATTACH_FIELDS",
    -- IN ST_ATTACH "ST_REGFORM_ATTACHMENTS",
    
    -- IN ST_UPDATED_FIELDS "ST_ENTITY_FIELDS_UPDATED",
    
    -- IN ST_ONB_EVENTS "ST_REGISTERATION_EVENT_COMMENTS",
    IN ST_LOGS "ST_SUPPLIER_PROFILE_LOG",
    -- 
    -- IN ST_NDA_ATTACH "ST_REGFORM_ATTACHMENTS",
    IN SR_NO INTEGER,
-- 	IN FILE_NAME NVARCHAR(100),
-- 	IN FILE_MIMETYPE NVARCHAR(100),
-- 	IN ATTACH_SHORT_DEC VARCHAR(50),
-- 	IN OT_DOC_ID NVARCHAR(10),
	IN ATTACH_CODE INTEGER,
	
	OUT OUT_SUCCESS NVARCHAR(500),
	OUT OUT_SUCCESS2 NVARCHAR(500),
	OUT OUT_EMAIL_TO NVARCHAR(100)

)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
   -- Local Variables:
    DECLARE LV_CURR_TIMESTAMP TIMESTAMP;
    DECLARE LV_CURR_DATE TIMESTAMP;
    DECLARE LV_OUT_PROC VARCHAR(500);
    DECLARE LV_FORM_TEMPID INTEGER;
    DECLARE LV_ADDR_TEMPID INTEGER;
    DECLARE LV_COUNT INTEGER;
    DECLARE NDA_COUNT INTEGER;
    DECLARE MAX_COUNT INTEGER;
    DECLARE MAX_COUNT1 INTEGER;
    DECLARE LV_REQUEST_NO INTEGER;
    -- DECLARE IN_OBR_ACTIVE INTEGER;
    -- DECLARE IN_REQUEST_TYPE INTEGER;
    -- DECLARE IN_CREATION_TYPE INTEGER;
    DECLARE LV_CONTACT_TEMPID INTEGER;
    DECLARE LV_OUT_SUCCESS VARCHAR(100);
    DECLARE LV_OUT_SUCCESS1 VARCHAR(100);
    DECLARE REGISTERED_ID VARCHAR(241);
    DECLARE CREATED_BY NVARCHAR(100);
    DECLARE CREATED_BY_NAME NVARCHAR(100);
    
    	-- Next Approver details
	DECLARE LV_NXT_APPROVER_ID NVARCHAR(100);
	DECLARE LV_NXT_APPROVER_ROLE NVARCHAR(50);
	DECLARE LV_NXT_APPROVER_LEVEL INTEGER;
	
	DECLARE OUT_ERROR_CODE BIGINT;
	DECLARE OUT_ERROR_MESSAGE VARCHAR(1000);
    
    OUT_SUCCESS := null;
    LV_NXT_APPROVER_LEVEL := 2;
    
    
    -- SELECT "NEW_VENDOR_INVITE_REQ".NEXTVAL INTO LV_REQUEST_NO FROM DUMMY;
    
     SELECT "REGISTERED_ID" INTO REGISTERED_ID FROM :ST_REQUEST_INFO;
     
     SELECT "USER_ID","USER_NAME" INTO CREATED_BY,CREATED_BY_NAME FROM :ST_ONB_EVENTS;

     SELECT "USER_ROLE", "USER_ID" 
     INTO LV_NXT_APPROVER_ROLE, LV_NXT_APPROVER_ID 
     FROM "VENDOR_PORTAL_MATRIX_REQUEST_APPR" 
     WHERE "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL AND "ENTITY_CODE" = :IN_ENTITY_CODE;
    
    
    -- Invitation - create record for the new request no.
    -- CALL "NEW_VENDOR_INVITE" (:ENTITY_CODE, :IN_IVEN_VENDOR_CODE,:ST_REQUEST_INFO,:ST_EVENTS, :LV_OUT_SUCCESS1); 
    -- LV_REQUEST_NO := LV_OUT_SUCCESS1;
CALL "REQUEST_PROCESS_CREATION" (:IN_ENTITY_CODE, :IN_IVEN_VENDOR_CODE,:ST_REQUEST_INFO,:ST_EVENTS, :LV_NXT_APPROVER_ID,:LV_NXT_APPROVER_LEVEL,:LV_NXT_APPROVER_ROLE,:LV_OUT_SUCCESS1,:OUT_ERROR_CODE, :OUT_ERROR_MESSAGE); 
LV_REQUEST_NO := LV_OUT_SUCCESS1;
    
    CALL "REQUEST_PROCESS_APPROVAL" ('ZVND',:LV_REQUEST_NO, 'Approved', 5, :REGISTERED_ID, :IN_IVEN_VENDOR_CODE,:SAP_VENDOR_CODE,:IN_OBR_ACTIVE,:IN_REQUEST_TYPE,
    :IN_CREATION_TYPE, 2,:ST_APP_EVENTS, 
					:LV_OUT_SUCCESS, :OUT_ERROR_CODE, :OUT_ERROR_MESSAGE);

    -- CALL "VENDOR_INVITE_APP_REJ" ('ZVND', 5, 'Approved.', :VEMAIL, :REG_NO, :ST_APP_EVENTS, :IN_IVEN_VENDOR_CODE,:SAP_VENDOR_CODE,
    --   :IN_OBR_ACTIVE,:IN_REQUEST_TYPE, :IN_CREATION_TYPE, 2,:LV_OUT_SUCCESS, :OUT_ERROR_CODE, :OUT_ERROR_MESSAGE);
    
    -- -- Get Active request no. from Iven code no.save as IN_OBR_ACTIVE
    
    
    
    -- Copy data from previous Active request to new request
    -- IF :IN_STATUS IS NOT null
    -- THEN
    --     CALL "SET_ACTIVE_DATA" (:LV_REQUEST_NO, :IN_OBR_ACTIVE,:IN_REQUEST_TYPE,:SAP_VENDOR_CODE, :IN_CREATION_TYPE,:IN_STATUS,:LV_OUT_SUCCESS);
    -- ELSE
    --     LV_OUT_SUCCESS := 'Success';
    -- END IF;
  
    
    --Current data copied in MAIN. COMTACTS. ADDRESS
    -- CALL "ONBOARDING_DRAFTV2" 
    -- (:LV_REQUEST_NO, :IN_STEP_NO,:IN_ENTITY_CODE,:IN_USER_ID, :IN_IS_RESEND, :IN_STATUS, 
    --     :ST_MAIN, :ST_ADDRESS, :ST_CONTACTS,
    --     :ST_PAYMENT, :ST_FINANCE, :ST_OWNER, 
    --     :ST_PROD_SERV, :ST_CAPACITY, :ST_CUSTOMER, :ST_OEM, 
    --     :ST_DISC_FIELDS, :ST_DISC_RELATIVES, :ST_DISC_QACERT, 
    --     :ST_ATTACH_FIELDS, :ST_ATTACH, :ST_UPDATED_FIELDS, :LV_OUT_PROC
    -- );
    CALL "REGFORM_DRAFT_SUBMIT" 
    (:REQUEST_NO, :IN_REQUEST_TYPE, :IN_STEP_NO,:IN_ENTITY_CODE,:IN_USER_ID, :IN_IS_RESEND, :IN_STATUS, 
    :ST_MAIN, :ST_ADDRESS, :ST_CONTACTS,
    :ST_BANKS, :ST_FINANCE, :ST_OWNER, 
    :ST_PROD_SERV, :ST_CAPACITY, :ST_CUSTOMER, :ST_OEM, 
    :ST_DISC_FIELDS, :ST_DISC_RELATIVES, :ST_DISC_QACERT, 
    :ST_ATTACH_FIELDS, :ST_ATTACH, :ST_UPDATED_FIELDS,
        :ST_EVENTS,:LV_OUT_PROC, :OUT_ERROR_CODE, :OUT_ERROR_MESSAGE,:OUT_EMAIL_TO
    );
    
    SELECT CURRENT_TIMESTAMP INTO LV_CURR_TIMESTAMP FROM DUMMY;
    SELECT CURRENT_DATE INTO LV_CURR_DATE FROM DUMMY;
    -- STATUS change in Invite & Onboarding - with next approver, level,role of PM from Matrix
    	 -- 1) Update Invite Table
        -- UPDATE "VENDOR_PORTAL_VENDOR_INVITATION"
        -- SET "STATUS" = 6 , "VCODE"='IR', "REQUEST_TYPE"= 5, "CREATED_BY"= :CREATED_BY,"CREATED_BY_NAME"= :CREATED_BY_NAME
        -- WHERE "LV_REQUEST_NO" = :LV_REQUEST_NO;
    UPDATE "VENDOR_PORTAL_REQUEST_INFO"
SET "STATUS" = 6 , "VENDOR_CODE"='IR', "REQUEST_TYPE"= 5, "REQUESTER_ID"= :CREATED_BY
WHERE "REQUEST_NO" = :LV_REQUEST_NO;
     
		
		-- SELECT COUNT(*)
        -- INTO LV_COUNT 
	    -- FROM "VENDOR_PORTAL_USER_DELEGATION" 
	    -- WHERE "STATUS" = 'A' AND "ASSIGN_FROM" = :LV_NXT_APPROVER_ID AND "DEL_TO_DATE" >= :LV_CURR_DATE AND "DEL_FROM_DATE" <= :LV_CURR_DATE;
	    
        -- IF :LV_COUNT != 0
    	--     THEN
    	--     LV_NXT_APPROVER_ROLE := null;
    	    
    	--     SELECT "ASSIGN_TO" 
        --     INTO LV_NXT_APPROVER_ID 
    	--     FROM "VENDOR_PORTAL_USER_DELEGATION" 
    	--     WHERE "STATUS" = 'A' AND "ASSIGN_FROM" = :LV_NXT_APPROVER_ID AND "DEL_TO_DATE" >= :LV_CURR_DATE AND "DEL_FROM_DATE" <= :LV_CURR_DATE;
        -- END IF;
        
	    -- 2) Update Onboarding Table:
	    -- UPDATE "VENDOR_PORTAL_ONBOARDING_FORM"
        -- SET "STATUS" = 6,
        -- "NEXT_APPROVER" = :LV_NXT_APPROVER_ID,
        -- "APPROVER_LEVEL" = :LV_NXT_APPROVER_LEVEL,
        -- "APPROVER_ROLE" = :LV_NXT_APPROVER_ROLE,
        -- "LAST_UPDATED_ON" = :LV_CURR_TIMESTAMP
        -- WHERE "REQUEST_NO" = :LV_REQUEST_NO;
        
        -- 3) Update NDA Attachment Table:
       
        -- IF :NDA_STATUS ='U' OR :NDA_STATUS ='N'
        -- THEN
	    -- DELETE FROM "VENDOR_PORTAL_REGFORM_ATTACHMENTS" WHERE "REQUEST_NO" = :LV_REQUEST_NO AND "SR_NO"= :SR_NO AND "ATTACH_CODE"= :ATTACH_CODE;
        -- END IF;
        -- IF :NDA_STATUS !='N'
        -- THEN
        -- NDA_COUNT := 1;
        -- SELECT COUNT(*)
        -- INTO MAX_COUNT1 FROM "VENDOR_PORTAL_REGFORM_ATTACHMENTS" WHERE REQUEST_NO = :LV_REQUEST_NO;
        
        -- IF :MAX_COUNT1 !=0
        -- THEN
        -- SELECT MAX("SR_NO") INTO MAX_COUNT FROM "VENDOR_PORTAL_REGFORM_ATTACHMENTS" WHERE REQUEST_NO = :LV_REQUEST_NO;
        -- NDA_COUNT := MAX_COUNT + 1;
        -- END IF;
        
        -- INSERT INTO "VENDOR_PORTAL_REGFORM_ATTACHMENTS" 
        -- 	(
        -- 		"REQUEST_NO", "SR_NO", "ATTACH_CODE", "ATTACH_DESC", "EXPIRY_DATE", "ATTACH_VALUE", "ATTACH_GROUP",
        -- 		"FILE_NAME", "FILE_TYPE", "FILE_MIMETYPE", "FILE_CONTENT", "UPLOADED_ON", "OT_DOC_ID",
        -- 		"OT_LAST_DOC_ID","UPDATE_FLAG","DELETE_FLAG","ATTACH_SHORT_DEC","ATTACH_FOR"
        -- 	)
        -- SELECT 	:LV_REQUEST_NO, :NDA_COUNT, "ATTACH_CODE", "ATTACH_DESC", "EXPIRY_DATE", "ATTACH_VALUE", "ATTACH_GROUP",
        -- 		"FILE_NAME", "FILE_TYPE", "FILE_MIMETYPE", "FILE_CONTENT", :LV_CURR_TIMESTAMP, "OT_DOC_ID",
        -- 		"OT_LAST_DOC_ID","UPDATE_FLAG","DELETE_FLAG","ATTACH_SHORT_DEC","ATTACH_FOR"
        -- FROM :ST_NDA_ATTACH;
        --  END IF;
    -- Logging
            INSERT INTO "VENDOR_PORTAL_REQUEST_EVENTS_LOG" 
    		(
    			"REQUEST_NO", "EVENT_NO", "EVENT_CODE","EVENT_TYPE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "CREATED_ON"
    		)
    		SELECT
    		    :LV_REQUEST_NO, "EVENT_NO", "EVENT_CODE", "EVENT_TYPE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", :LV_CURR_TIMESTAMP
    		    FROM :ST_ONB_EVENTS;
    		    
    		    
    		 INSERT INTO "VENDOR_PORTAL_SUPPLIER_PROFILE_LOG" 
    		(
    			"SAP_VENDOR_CODE", "EVENT_NO", "EVENT_CODE","EVENT_TYPE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", "UPDATED_ON","UPDATED_FIELD_NAME",
    			"CHANGE_VALUE","ORG_VALUE","REQUEST_NO"
    		)
    		SELECT
    		    "SAP_VENDOR_CODE", "EVENT_NO", "EVENT_CODE", "EVENT_TYPE", "USER_ID", "USER_NAME", "REMARK", "COMMENT", :LV_CURR_TIMESTAMP,"UPDATED_FIELD_NAME",
    		    "CHANGE_VALUE","ORG_VALUE",:LV_REQUEST_NO
    		    FROM :ST_LOGS;
     
    
    IF :LV_OUT_PROC IS NOT NULL 
	THEN
        
        OUT_SUCCESS := :LV_OUT_PROC;
        OUT_SUCCESS2 := :LV_NXT_APPROVER_ID;
        COMMIT;	
		
	END IF;
   
   
END